{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Karishma\\\\Desktop\\\\compswipe\\\\compswipe\\\\client\\\\my-app\\\\src\\\\myorders.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { myorders } from './action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrderDashboard = () => {\n  _s();\n  const [openOrderId, setOpenOrderId] = useState(null);\n  const [OrdersData, setOrderData] = useState({});\n  useEffect(() => {\n    const fun = async () => {\n      const orderData = await myorders();\n      // console.log('hello');\n      setOrderData(orderData);\n    };\n    fun();\n  }, []);\n  const OrdersDetails = orderData.map(order => {\n    const formattedItems = order.event_order_details.map(item => ({\n      name: item.productname,\n      plates: item.minunitsperplate,\n      // Assuming this refers to 'plates'\n      pricePerUnit: item.priceperunit,\n      pricePerKg: item.isdual ? item.priceperunit : undefined,\n      // If dual unit, it's weight-based (like kg)\n      quantity: item.quantity,\n      amount: item.quantity * item.priceperunit // Calculated amount\n    }));\n    return {\n      id: order.eventorder_generated_id,\n      // Use the generated order ID\n      date: formatOrderDate(order.ordered_at),\n      // Format the ordered_at date\n      amount: order.total_amount,\n      items: formattedItems,\n      status: order.event_order_status // Use event_order_status\n    };\n  });\n  const orders = [{\n    id: '6988647684',\n    date: '10/8/2024',\n    amount: 5504,\n    items: [{\n      name: 'Idly',\n      plates: 150,\n      pricePerUnit: 5,\n      quantity: 4,\n      amount: 600\n    }, {\n      name: 'Biryani',\n      plates: 150,\n      pricePerKg: 3,\n      quantity: 5,\n      amount: 600\n    }, {\n      name: 'Biryani',\n      plates: 150,\n      pricePerKg: 5,\n      quantity: 3,\n      amount: 600\n    }],\n    status: 'Processing'\n  }\n  // Add more orders here if needed\n  ];\n  const handleOrderClick = order => {\n    if (openOrderId === order.id) {\n      // If the same order is clicked, toggle details\n      setOpenOrderId(null);\n    } else {\n      // Set the new order ID to open\n      setOpenOrderId(order.id);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4 bg-green-600 text-white p-2\",\n      children: \"Your Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex space-x-2 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-orange-100 text-orange-500 border border-orange-500 rounded-full px-4 py-1\",\n        children: \"CORPORATE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-blue-100 text-blue-500 border border-blue-500 rounded-full px-4 py-1\",\n        children: \"EVENT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n      children: orders.map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border rounded-lg p-4 cursor-pointer\",\n        onClick: () => handleOrderClick(order),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Order ID: \", order.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Date of Order: \", order.date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Amount: \\u20B9\", order.amount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-red-100 text-red-500 px-2 py-1 rounded\",\n            children: \"Buy again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-100 p-2 rounded\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-center font-bold mb-2\",\n            children: \"Order progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-6 h-6 rounded-full bg-yellow-400 mb-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xs\",\n                children: \"Processing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-6 h-6 rounded-full bg-blue-400 mb-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xs\",\n                children: \"Shipped\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-6 h-6 rounded-full bg-green-400 mb-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xs\",\n                children: \"Delivery\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), openOrderId === order.id && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 bg-white p-4 rounded-lg shadow\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleOrderClick(order),\n            className: \"bg-blue-500 text-white px-4 py-2 rounded mb-4 w-full text-left flex justify-between items-center\",\n            children: [openOrderId === order.id ? 'Hide Details' : 'Show Details', /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xs\",\n              children: openOrderId === order.id ? '▲' : '▼'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-bold mb-2\",\n              children: \"Order Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: order.items.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"mb-2\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"/api/placeholder/50/50\",\n                    alt: item.name,\n                    className: \"w-12 h-12 rounded-full mr-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"font-bold\",\n                      children: item.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 118,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"No of plates: \", item.plates]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 119,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"Price per \", item.pricePerUnit ? 'units' : 'units2', \": \\u20B9\", item.pricePerUnit || item.priceperunits2]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 120,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"Quantity: \", item.quantity, \" \", item.pricePerUnit ? 'units' : 'kgs']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 121,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"Amount: \\u20B9\", item.amount]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 122,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 25\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this)]\n      }, order.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(OrderDashboard, \"Yeu/0R5/8/1pGEvl36+OAPKr2w4=\");\n_c = OrderDashboard;\nexport default OrderDashboard;\n\n// import { CakeIcon, CalendarIcon, HomeIcon,CheckCircleIcon,  MinusCircleIcon } from '@heroicons/react/solid';\n// import axios from 'axios';\n// import React, { useEffect, useState } from 'react';\n// import { Link, useNavigate } from 'react-router-dom';\n\n// const EventOrders = () => {\n//   const [showCorporate, setShowCorporate] = useState(true);\n//   const [expandedOrder, setExpandedOrder] = useState(null);\n//   const [isLoading, setIsLoading] = useState(true);\n//   const [orderData, setOrderData] = useState(null);\n//   const [error, setError] = useState(null);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const fetchOrders = async () => {\n//       setIsLoading(true);\n//       setError(null);\n//       try {\n//         const response = await fetch('http://localhost:5000/api/myorders');\n//         console.log(\"res\", response);\n//         if (response.data) {\n//           setOrderData(response.data);\n//         } else {\n//           setError('No data received from the server.');\n//           setOrderData(null);\n//         }\n//       } catch (error) {\n//         setError('Failed to fetch orders. Please try again later.');\n//         setOrderData(null);\n//       } finally {\n//         setIsLoading(false);\n//       }\n//     };\n//     fetchOrders();\n//   }, []);\n\n//   const toggleOrderDetails = (orderId) => {\n//     setExpandedOrder(expandedOrder === orderId ? null : orderId);\n//   };\n\n//   const handleViewHome = () => {\n//     navigate('/home');\n//   };\n\n// const renderProgressIcons = (progress) => {\n//         const stages = ['processing', 'shipped', 'delivered'];\n//          const activeIndex = stages.indexOf(progress);\n\n//          return (\n//            <div className=\"flex justify-between items-center\">\n//            {stages.map((stage, index) => (\n//                <div key={stage} className=\"flex flex-col items-center\">\n//                 {index <= activeIndex ? (\n//                   <CheckCircleIcon className=\"text-green-500 h-4 w-4 sm:h-6 sm:w-6 mb-1 transition-transform transform hover:scale-110\" />\n//                 ) : (\n//                   <MinusCircleIcon className=\"text-gray-400 h-4 w-4 sm:h-6 sm:w-6 mb-1 transition-transform transform hover:scale-110\" />\n//                 )}\n//                 <span className={`text-xs ${index <= activeIndex ? 'text-gray-900 font-semibold' : 'text-gray-400'}`}>\n//                   {stage.charAt(0).toUpperCase() + stage.slice(1)}\n//                 </span>\n//               </div>\n//             ))}\n//           </div>\n//          );\n//        };\n\n//       const renderOrder = (order) => (\n//         <div key={order.id || order.eventorder_generated_id} className=\"w-full bg-white rounded-lg border shadow-md hover:shadow-xl transition-shadow duration-300 mx-3 sm:mx-4\">\n//           <div\n//             className=\"flex justify-between items-center p-4 sm:p-6 bg-blue-100 cursor-pointer hover:bg-blue-200 transition-colors rounded-t-lg\"\n//             onClick={() => toggleOrderDetails(order.id || order.eventorder_generated_id)}\n//           >\n//             <div className=\"w-full\">\n//               <p className=\"text-lg sm:text-xl font-bold text-blue-700\">Order ID: {order.id || order.eventorder_generated_id}</p>\n//               <p className=\"text-xs sm:text-sm text-gray-600 mt-1\">Date: {(order.details && order.details[0]?.date) || order.date || 'N/A'}</p>\n//             </div>\n//             <div>\n//               <span className=\"text-gray-500 text-xl sm:text-2xl\">\n//                 {expandedOrder === (order.id || order.eventorder_generated_id) ? '[-]' : '[+]'}\n//               </span>\n//             </div>\n//           </div>\n\n//           {expandedOrder === (order.id || order.eventorder_generated_id) && (\n//             <div className=\"p-4 sm:p-6 overflow-x-auto\">\n//              <table className=\"w-full bg-white min-w-max\">\n//                  <thead className=\"bg-gray-100 text-left text-xs sm:text-sm\">\n//                   <tr>\n//                      <th className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">Category Name</th>\n//                     <th className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">Progress</th>\n//                     <th className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">Date</th>\n//                     <th className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">Qty</th>\n//                     <th className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">Active Qty</th>\n//                     <th className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">Status</th>\n//                     <th className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">Media</th>\n//                   </tr>\n//                 </thead>\n//                 <tbody>\n//                   {(order.details || [order]).map((detail, i) => (\n//                     <tr key={i} className=\"border-t text-xs sm:text-sm hover:bg-gray-50\">\n//                       <td className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">{detail.name || 'N/A'}</td>\n//                       <td className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">{renderProgressIcons(detail.progress)}</td>\n//                       <td className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">{detail.date}</td>\n//                       <td className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">{detail.quantity}</td>\n//                       <td className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">{detail.active_quantity}</td>\n//                       <td\n//                         className={`p-2 sm:p-3 lg:p-4 font-bold whitespace-nowrap ${\n//                           detail.status === 'cancelled' ? 'text-red-500' : 'text-green-500'\n//                         }`}\n//                       >\n//                         {detail.status}\n//                       </td>\n//                       <td className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">{detail.category_media || 'N/A'}</td>\n//                     </tr>\n//                   ))}\n//                 </tbody>\n//               </table>\n//              </div>\n//           )}\n//         </div>\n//       );\n\n//       return (\n//         <>\n//          <header className=\"w-full bg-green-500 h-16 flex items-center pl-4\">\n//           <Link to='/home'>\n//       <HomeIcon className=\"h-6 w-6 sm:h-8 sm:w-8 text-white mr-2\" onClick={handleViewHome}/> \n//       </Link>\n//       <h1 className=\"text-2xl sm:text-3xl lg:text-4xl text-white\">\n//         Your Orders\n//       </h1>\n//     </header>\n\n//           <div className=\"w-full my-4 sm:my-10 px-4 sm:px-6 lg:px-8 xl:px-0 bg-gradient-to-r from-blue-50 to-white shadow-xl rounded-lg\">\n//             <div className=\"flex justify-center gap-4 sm:gap-6 mb-6 sm:mb-10\">\n//               <button\n//                 className={`py-2 px-4 sm:py-3 sm:px-8 rounded-full font-semibold text-sm sm:text-lg transition-all duration-300 transform ${\n//                   !showCorporate ? 'bg-green-500 text-white shadow-lg hover:scale-105' : 'bg-gray-300 text-gray-700 hover:scale-105'\n//                 }`}\n//                 onClick={() => setShowCorporate(false)}\n//               >\n//                 <CalendarIcon className=\"h-5 w-5 inline-block mr-2\" />\n//                 Corporate\n//               </button>\n//               <button\n//                 className={`py-2 px-4 sm:py-3 sm:px-8 rounded-full font-semibold text-sm sm:text-lg transition-all duration-300 transform ${\n//                   showCorporate ? 'bg-yellow-500 text-white shadow-lg hover:scale-105' : 'bg-gray-300 text-gray-700 hover:scale-105'\n//                 }`}\n//                 onClick={() => setShowCorporate(true)}\n//               >\n//                 <CakeIcon className=\"h-5 w-5 inline-block mr-2\" />\n//                 Events\n//               </button>\n//             </div>\n\n//             {showCorporate && (\n//               <div className=\"space-y-4 sm:space-y-8 w-full\">\n//                 {isLoading ? (\n//                   <p>Loading orders...</p>\n//                 ) : error ? (\n//                   <p className=\"text-red-500\">{error}</p>\n//                 ) : orderData ? (\n//                   Array.isArray(orderData) ? orderData.map(renderOrder) : renderOrder(orderData)\n//                 ) : (\n//                   <p>No corporate orders found.</p>\n//                 )}\n//               </div>\n//             )}\n\n//             {!showCorporate && (\n//               <div className=\"text-center py-8\">\n//                 <p className=\"text-lg text-gray-700\">Events content will be displayed here.</p>\n//               </div>\n//             )}\n//           </div>\n//         </>\n//       );\n//     };\n\n// export default EventOrders;\n\n// // import { CakeIcon, CalendarIcon, CheckCircleIcon, HomeIcon, MinusCircleIcon } from '@heroicons/react/solid';\n// // import axios from 'axios';\n// // import React, { useEffect, useState } from 'react';\n// // import { Link, useNavigate } from 'react-router-dom';\n\n// // const EventOrders = () => {\n// //   const [showCorporate, setShowCorporate] = useState(true);\n// //   const [expandedOrder, setExpandedOrder] = useState(null);\n// //   const [isLoading, setIsLoading] = useState(true);\n// //   const [orderData, setOrderData] = useState(null);\n// //   const [error, setError] = useState(null);\n// //   const navigate = useNavigate();\n\n// //   useEffect(() => {\n// //     const fetchOrders = async () => {\n// //       setIsLoading(true);\n// //       setError(null);\n// //       try {\n// //         // const token = localStorage.getItem('accessToken');\n// //         // console.log('Access Token:', token); // Debug: Check if token exists\n\n// //         const response = await axios.get('http://localhost:5000/api/myorders', {\n// //         //   headers: { token: ${token} },\n// //         });\n// //         console.log('Full API Response:', response); // Log the full response\n// //         console.log('API Response Data:', response.data); // Log just the data\n\n// //         if (response.data) {\n// //            console.log(response.data);\n// //           setOrderData(response.data);\n// //         } else {\n// //           setError('No data received from the server.');\n// //           setOrderData(null);\n// //         }\n// //       } catch (error) {\n// //         console.error('Error fetching corporate order data:', error);\n// //         setError('Failed to fetch orders. Please try again later.');\n// //         setOrderData(null);\n// //       } finally {\n// //         setIsLoading(false);\n// //       }\n// //     };\n// //     fetchOrders();\n// //   }, []);\n\n// //   const toggleOrderDetails = (orderId) => {\n// //     setExpandedOrder(expandedOrder === orderId ? null : orderId);\n// //   };\n\n// //   const handleViewHome = ()=>{\n// //     navigate('/home')\n// //   }\n\n// // //   const renderProgressIcons = (progress) => {\n// // //     const stages = ['processing', 'shipped', 'delivered'];\n// // //     const activeIndex = stages.indexOf(progress);\n\n// // //     return (\n// // //       <div className=\"flex justify-between items-center\">\n// // //         {stages.map((stage, index) => (\n// // //           <div key={stage} className=\"flex flex-col items-center\">\n// // //             {index <= activeIndex ? (\n// // //               <CheckCircleIcon className=\"text-green-500 h-4 w-4 sm:h-6 sm:w-6 mb-1 transition-transform transform hover:scale-110\" />\n// // //             ) : (\n// // //               <MinusCircleIcon className=\"text-gray-400 h-4 w-4 sm:h-6 sm:w-6 mb-1 transition-transform transform hover:scale-110\" />\n// // //             )}\n// // //             <span className={`text-xs ${index <= activeIndex ? 'text-gray-900 font-semibold' : 'text-gray-400'}`}>\n// // //               {stage.charAt(0).toUpperCase() + stage.slice(1)}\n// // //             </span>\n// // //           </div>\n// // //         ))}\n// // //       </div>\n// // //     );\n// // //   };\n\n// // //   const renderOrder = (order) => (\n// // //     <div key={order.id || order.eventorder_generated_id} className=\"w-full bg-white rounded-lg border shadow-md hover:shadow-xl transition-shadow duration-300 mx-3 sm:mx-4\">\n// // //       <div\n// // //         className=\"flex justify-between items-center p-4 sm:p-6 bg-blue-100 cursor-pointer hover:bg-blue-200 transition-colors rounded-t-lg\"\n// // //         onClick={() => toggleOrderDetails(order.id || order.eventorder_generated_id)}\n// // //       >\n// // //         <div className=\"w-full\">\n// // //           <p className=\"text-lg sm:text-xl font-bold text-blue-700\">Order ID: {order.id || order.eventorder_generated_id}</p>\n// // //           <p className=\"text-xs sm:text-sm text-gray-600 mt-1\">Date: {(order.details && order.details[0]?.date) || order.date || 'N/A'}</p>\n// // //         </div>\n// // //         <div>\n// // //           <span className=\"text-gray-500 text-xl sm:text-2xl\">\n// // //             {expandedOrder === (order.id || order.eventorder_generated_id) ? '[-]' : '[+]'}\n// // //           </span>\n// // //         </div>\n// // //       </div>\n\n// // //       {expandedOrder === (order.id || order.eventorder_generated_id) && (\n// // //         <div className=\"p-4 sm:p-6 overflow-x-auto\">\n// // //           <table className=\"w-full bg-white min-w-max\">\n// // //             <thead className=\"bg-gray-100 text-left text-xs sm:text-sm\">\n// // //               <tr>\n// // //                 <th className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">Category Name</th>\n// // //                 <th className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">Progress</th>\n// // //                 <th className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">Date</th>\n// // //                 <th className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">Qty</th>\n// // //                 <th className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">Active Qty</th>\n// // //                 <th className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">Status</th>\n// // //                 <th className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">Media</th>\n// // //               </tr>\n// // //             </thead>\n// // //             <tbody>\n// // //               {(order.details || [order]).map((detail, i) => (\n// // //                 <tr key={i} className=\"border-t text-xs sm:text-sm hover:bg-gray-50\">\n// // //                   <td className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">{detail.name || 'N/A'}</td>\n// // //                   <td className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">{renderProgressIcons(detail.progress)}</td>\n// // //                   <td className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">{detail.date}</td>\n// // //                   <td className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">{detail.quantity}</td>\n// // //                   <td className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">{detail.active_quantity}</td>\n// // //                   <td\n// // //                     className={`p-2 sm:p-3 lg:p-4 font-bold whitespace-nowrap ${\n// // //                       detail.status === 'cancelled' ? 'text-red-500' : 'text-green-500'\n// // //                     }`}\n// // //                   >\n// // //                     {detail.status}\n// // //                   </td>\n// // //                   <td className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">{detail.category_media || 'N/A'}</td>\n// // //                 </tr>\n// // //               ))}\n// // //             </tbody>\n// // //           </table>\n// // //         </div>\n// // //       )}\n// // //     </div>\n// // //   );\n\n// //   return (\n// //     <>\n// //      <header className=\"w-full bg-green-500 h-16 flex items-center pl-4\">\n// //       <Link to='/home'>\n// //   <HomeIcon className=\"h-6 w-6 sm:h-8 sm:w-8 text-white mr-2\" onClick={handleViewHome}/> \n// //   </Link>\n// //   <h1 className=\"text-2xl sm:text-3xl lg:text-4xl text-white\">\n// //     Your Orders\n// //   </h1>\n// // </header>\n\n// //       <div className=\"w-full my-4 sm:my-10 px-4 sm:px-6 lg:px-8 xl:px-0 bg-gradient-to-r from-blue-50 to-white shadow-xl rounded-lg\">\n// //         <div className=\"flex justify-center gap-4 sm:gap-6 mb-6 sm:mb-10\">\n// //           <button\n// //             className={`py-2 px-4 sm:py-3 sm:px-8 rounded-full font-semibold text-sm sm:text-lg transition-all duration-300 transform ${\n// //               !showCorporate ? 'bg-green-500 text-white shadow-lg hover:scale-105' : 'bg-gray-300 text-gray-700 hover:scale-105'\n// //             }`}\n// //             onClick={() => setShowCorporate(false)}\n// //           >\n// //             <CalendarIcon className=\"h-5 w-5 inline-block mr-2\" />\n// //             Events\n// //           </button>\n// //           <button\n// //             className={`py-2 px-4 sm:py-3 sm:px-8 rounded-full font-semibold text-sm sm:text-lg transition-all duration-300 transform ${\n// //               showCorporate ? 'bg-yellow-500 text-white shadow-lg hover:scale-105' : 'bg-gray-300 text-gray-700 hover:scale-105'\n// //             }`}\n// //             onClick={() => setShowCorporate(true)}\n// //           >\n// //             <CakeIcon className=\"h-5 w-5 inline-block mr-2\" />\n// //             Events\n// //           </button>\n// //         </div>\n\n// //         {showCorporate && (\n// //           <div className=\"space-y-4 sm:space-y-8 w-full\">\n// //             {isLoading ? (\n// //               <p>Loading orders...</p>\n// //             ) : error ? (\n// //               <p className=\"text-red-500\">{error}</p>\n// //             ) : orderData ? (\n// //               Array.isArray(orderData) ? orderData.map(renderOrder) : renderOrder(orderData)\n// //             ) : (\n// //               <p>No corporate orders found.</p>\n// //             )}\n// //           </div>\n// //         )}\n\n// //         {!showCorporate && (\n// //           <div className=\"text-center py-8\">\n// //             <p className=\"text-lg text-gray-700\">Events content will be displayed here.</p>\n// //           </div>\n// //         )}\n// //       </div>\n// //     </>\n// //   );\n// // };\n\n// // export default EventOrders;\nvar _c;\n$RefreshReg$(_c, \"OrderDashboard\");","map":{"version":3,"names":["React","useEffect","useState","myorders","jsxDEV","_jsxDEV","OrderDashboard","_s","openOrderId","setOpenOrderId","OrdersData","setOrderData","fun","orderData","OrdersDetails","map","order","formattedItems","event_order_details","item","name","productname","plates","minunitsperplate","pricePerUnit","priceperunit","pricePerKg","isdual","undefined","quantity","amount","id","eventorder_generated_id","date","formatOrderDate","ordered_at","total_amount","items","status","event_order_status","orders","handleOrderClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","index","src","alt","priceperunits2","_c","$RefreshReg$"],"sources":["C:/Users/Karishma/Desktop/compswipe/compswipe/client/my-app/src/myorders.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { myorders } from './action';\r\n\r\nconst OrderDashboard = () => {\r\n  const [openOrderId, setOpenOrderId] = useState(null);\r\n  const [OrdersData, setOrderData] = useState({});\r\n\r\n\r\n \r\n useEffect (()=>{\r\n\r\n    const fun = async ()=>{\r\n        const orderData = await myorders();\r\n        // console.log('hello');\r\n        setOrderData(orderData);\r\n    } \r\n    fun();\r\n },[]);\r\n\r\n\r\n const OrdersDetails = orderData.map(order => {\r\n    const formattedItems = order.event_order_details.map(item => ({\r\n        name: item.productname,\r\n        plates: item.minunitsperplate,  // Assuming this refers to 'plates'\r\n        pricePerUnit: item.priceperunit,\r\n        pricePerKg: item.isdual ? item.priceperunit : undefined,  // If dual unit, it's weight-based (like kg)\r\n        quantity: item.quantity,\r\n        amount: item.quantity * item.priceperunit,  // Calculated amount\r\n    }));\r\n\r\n    return {\r\n        id: order.eventorder_generated_id,  // Use the generated order ID\r\n        date: formatOrderDate(order.ordered_at),  // Format the ordered_at date\r\n        amount: order.total_amount,\r\n        items: formattedItems,\r\n        status: order.event_order_status,  // Use event_order_status\r\n    };\r\n});\r\n\r\n    \r\n\r\n  const orders = [\r\n    {\r\n      id: '6988647684',\r\n      date: '10/8/2024',\r\n      amount: 5504,\r\n      items: [\r\n        { name: 'Idly', plates: 150, pricePerUnit: 5, quantity: 4, amount: 600 },\r\n        { name: 'Biryani', plates: 150, pricePerKg: 3, quantity: 5, amount: 600 },\r\n        { name: 'Biryani', plates: 150, pricePerKg: 5, quantity: 3, amount: 600 },\r\n      ],\r\n      status: 'Processing',\r\n    },\r\n    // Add more orders here if needed\r\n  ];\r\n\r\n\r\n\r\n  const handleOrderClick = (order) => {\r\n    if (openOrderId === order.id) {\r\n      // If the same order is clicked, toggle details\r\n      setOpenOrderId(null);\r\n    } else {\r\n      // Set the new order ID to open\r\n      setOpenOrderId(order.id);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4\">\r\n      <h1 className=\"text-2xl font-bold mb-4 bg-green-600 text-white p-2\">Your Orders</h1>\r\n      <div className=\"flex space-x-2 mb-4\">\r\n        <button className=\"bg-orange-100 text-orange-500 border border-orange-500 rounded-full px-4 py-1\">CORPORATE</button>\r\n        <button className=\"bg-blue-100 text-blue-500 border border-blue-500 rounded-full px-4 py-1\">EVENT</button>\r\n      </div>\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n        {orders.map((order) => (\r\n          <div key={order.id} className=\"border rounded-lg p-4 cursor-pointer\" onClick={() => handleOrderClick(order)}>\r\n            <div className=\"flex justify-between items-center mb-2\">\r\n              <div>\r\n                <p>Order ID: {order.id}</p>\r\n                <p>Date of Order: {order.date}</p>\r\n                <p>Amount: ₹{order.amount}</p>\r\n              </div>\r\n              <button className=\"bg-red-100 text-red-500 px-2 py-1 rounded\">Buy again</button>\r\n            </div>\r\n            <div className=\"bg-gray-100 p-2 rounded\">\r\n              <h3 className=\"text-center font-bold mb-2\">Order progress</h3>\r\n              <div className=\"flex justify-between\">\r\n                <div className=\"flex flex-col items-center\">\r\n                  <div className=\"w-6 h-6 rounded-full bg-yellow-400 mb-1\"></div>\r\n                  <span className=\"text-xs\">Processing</span>\r\n                </div>\r\n                <div className=\"flex flex-col items-center\">\r\n                  <div className=\"w-6 h-6 rounded-full bg-blue-400 mb-1\"></div>\r\n                  <span className=\"text-xs\">Shipped</span>\r\n                </div>\r\n                <div className=\"flex flex-col items-center\">\r\n                  <div className=\"w-6 h-6 rounded-full bg-green-400 mb-1\"></div>\r\n                  <span className=\"text-xs\">Delivery</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {openOrderId === order.id && (\r\n              <div className=\"mt-4 bg-white p-4 rounded-lg shadow\">\r\n                <button onClick={() => handleOrderClick(order)} className=\"bg-blue-500 text-white px-4 py-2 rounded mb-4 w-full text-left flex justify-between items-center\">\r\n                  {openOrderId === order.id ? 'Hide Details' : 'Show Details'}\r\n                  <span className=\"text-xs\">{openOrderId === order.id ? '▲' : '▼'}</span>\r\n                </button>\r\n                <div>\r\n                  <h2 className=\"text-xl font-bold mb-2\">Order Details</h2>\r\n                  <ul>\r\n                    {order.items.map((item, index) => (\r\n                      <li key={index} className=\"mb-2\">\r\n                        <div className=\"flex items-center\">\r\n                          <img src=\"/api/placeholder/50/50\" alt={item.name} className=\"w-12 h-12 rounded-full mr-2\" />\r\n                          <div>\r\n                            <p className=\"font-bold\">{item.name}</p>\r\n                            <p>No of plates: {item.plates}</p>\r\n                            <p>Price per {item.pricePerUnit ? 'units' : 'units2'}: ₹{item.pricePerUnit || item.priceperunits2}</p>\r\n                            <p>Quantity: {item.quantity} {item.pricePerUnit ? 'units' : 'kgs'}</p>\r\n                            <p>Amount: ₹{item.amount}</p>\r\n                          </div>\r\n                        </div>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderDashboard;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import { CakeIcon, CalendarIcon, HomeIcon,CheckCircleIcon,  MinusCircleIcon } from '@heroicons/react/solid';\r\n// import axios from 'axios';\r\n// import React, { useEffect, useState } from 'react';\r\n// import { Link, useNavigate } from 'react-router-dom';\r\n\r\n// const EventOrders = () => {\r\n//   const [showCorporate, setShowCorporate] = useState(true);\r\n//   const [expandedOrder, setExpandedOrder] = useState(null);\r\n//   const [isLoading, setIsLoading] = useState(true);\r\n//   const [orderData, setOrderData] = useState(null);\r\n//   const [error, setError] = useState(null);\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     const fetchOrders = async () => {\r\n//       setIsLoading(true);\r\n//       setError(null);\r\n//       try {\r\n//         const response = await fetch('http://localhost:5000/api/myorders');\r\n//         console.log(\"res\", response);\r\n//         if (response.data) {\r\n//           setOrderData(response.data);\r\n//         } else {\r\n//           setError('No data received from the server.');\r\n//           setOrderData(null);\r\n//         }\r\n//       } catch (error) {\r\n//         setError('Failed to fetch orders. Please try again later.');\r\n//         setOrderData(null);\r\n//       } finally {\r\n//         setIsLoading(false);\r\n//       }\r\n//     };\r\n//     fetchOrders();\r\n//   }, []);\r\n   \r\n//   const toggleOrderDetails = (orderId) => {\r\n//     setExpandedOrder(expandedOrder === orderId ? null : orderId);\r\n//   };\r\n\r\n//   const handleViewHome = () => {\r\n//     navigate('/home');\r\n//   };\r\n\r\n// const renderProgressIcons = (progress) => {\r\n//         const stages = ['processing', 'shipped', 'delivered'];\r\n//          const activeIndex = stages.indexOf(progress);\r\n        \r\n//          return (\r\n//            <div className=\"flex justify-between items-center\">\r\n//            {stages.map((stage, index) => (\r\n//                <div key={stage} className=\"flex flex-col items-center\">\r\n//                 {index <= activeIndex ? (\r\n//                   <CheckCircleIcon className=\"text-green-500 h-4 w-4 sm:h-6 sm:w-6 mb-1 transition-transform transform hover:scale-110\" />\r\n//                 ) : (\r\n//                   <MinusCircleIcon className=\"text-gray-400 h-4 w-4 sm:h-6 sm:w-6 mb-1 transition-transform transform hover:scale-110\" />\r\n//                 )}\r\n//                 <span className={`text-xs ${index <= activeIndex ? 'text-gray-900 font-semibold' : 'text-gray-400'}`}>\r\n//                   {stage.charAt(0).toUpperCase() + stage.slice(1)}\r\n//                 </span>\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n//          );\r\n//        };\r\n    \r\n//       const renderOrder = (order) => (\r\n//         <div key={order.id || order.eventorder_generated_id} className=\"w-full bg-white rounded-lg border shadow-md hover:shadow-xl transition-shadow duration-300 mx-3 sm:mx-4\">\r\n//           <div\r\n//             className=\"flex justify-between items-center p-4 sm:p-6 bg-blue-100 cursor-pointer hover:bg-blue-200 transition-colors rounded-t-lg\"\r\n//             onClick={() => toggleOrderDetails(order.id || order.eventorder_generated_id)}\r\n//           >\r\n//             <div className=\"w-full\">\r\n//               <p className=\"text-lg sm:text-xl font-bold text-blue-700\">Order ID: {order.id || order.eventorder_generated_id}</p>\r\n//               <p className=\"text-xs sm:text-sm text-gray-600 mt-1\">Date: {(order.details && order.details[0]?.date) || order.date || 'N/A'}</p>\r\n//             </div>\r\n//             <div>\r\n//               <span className=\"text-gray-500 text-xl sm:text-2xl\">\r\n//                 {expandedOrder === (order.id || order.eventorder_generated_id) ? '[-]' : '[+]'}\r\n//               </span>\r\n//             </div>\r\n//           </div>\r\n    \r\n//           {expandedOrder === (order.id || order.eventorder_generated_id) && (\r\n//             <div className=\"p-4 sm:p-6 overflow-x-auto\">\r\n//              <table className=\"w-full bg-white min-w-max\">\r\n//                  <thead className=\"bg-gray-100 text-left text-xs sm:text-sm\">\r\n//                   <tr>\r\n//                      <th className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">Category Name</th>\r\n//                     <th className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">Progress</th>\r\n//                     <th className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">Date</th>\r\n//                     <th className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">Qty</th>\r\n//                     <th className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">Active Qty</th>\r\n//                     <th className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">Status</th>\r\n//                     <th className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">Media</th>\r\n//                   </tr>\r\n//                 </thead>\r\n//                 <tbody>\r\n//                   {(order.details || [order]).map((detail, i) => (\r\n//                     <tr key={i} className=\"border-t text-xs sm:text-sm hover:bg-gray-50\">\r\n//                       <td className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">{detail.name || 'N/A'}</td>\r\n//                       <td className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">{renderProgressIcons(detail.progress)}</td>\r\n//                       <td className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">{detail.date}</td>\r\n//                       <td className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">{detail.quantity}</td>\r\n//                       <td className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">{detail.active_quantity}</td>\r\n//                       <td\r\n//                         className={`p-2 sm:p-3 lg:p-4 font-bold whitespace-nowrap ${\r\n//                           detail.status === 'cancelled' ? 'text-red-500' : 'text-green-500'\r\n//                         }`}\r\n//                       >\r\n//                         {detail.status}\r\n//                       </td>\r\n//                       <td className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">{detail.category_media || 'N/A'}</td>\r\n//                     </tr>\r\n//                   ))}\r\n//                 </tbody>\r\n//               </table>\r\n//              </div>\r\n//           )}\r\n//         </div>\r\n//       );\r\n    \r\n//       return (\r\n//         <>\r\n//          <header className=\"w-full bg-green-500 h-16 flex items-center pl-4\">\r\n//           <Link to='/home'>\r\n//       <HomeIcon className=\"h-6 w-6 sm:h-8 sm:w-8 text-white mr-2\" onClick={handleViewHome}/> \r\n//       </Link>\r\n//       <h1 className=\"text-2xl sm:text-3xl lg:text-4xl text-white\">\r\n//         Your Orders\r\n//       </h1>\r\n//     </header>\r\n    \r\n//           <div className=\"w-full my-4 sm:my-10 px-4 sm:px-6 lg:px-8 xl:px-0 bg-gradient-to-r from-blue-50 to-white shadow-xl rounded-lg\">\r\n//             <div className=\"flex justify-center gap-4 sm:gap-6 mb-6 sm:mb-10\">\r\n//               <button\r\n//                 className={`py-2 px-4 sm:py-3 sm:px-8 rounded-full font-semibold text-sm sm:text-lg transition-all duration-300 transform ${\r\n//                   !showCorporate ? 'bg-green-500 text-white shadow-lg hover:scale-105' : 'bg-gray-300 text-gray-700 hover:scale-105'\r\n//                 }`}\r\n//                 onClick={() => setShowCorporate(false)}\r\n//               >\r\n//                 <CalendarIcon className=\"h-5 w-5 inline-block mr-2\" />\r\n//                 Corporate\r\n//               </button>\r\n//               <button\r\n//                 className={`py-2 px-4 sm:py-3 sm:px-8 rounded-full font-semibold text-sm sm:text-lg transition-all duration-300 transform ${\r\n//                   showCorporate ? 'bg-yellow-500 text-white shadow-lg hover:scale-105' : 'bg-gray-300 text-gray-700 hover:scale-105'\r\n//                 }`}\r\n//                 onClick={() => setShowCorporate(true)}\r\n//               >\r\n//                 <CakeIcon className=\"h-5 w-5 inline-block mr-2\" />\r\n//                 Events\r\n//               </button>\r\n//             </div>\r\n    \r\n//             {showCorporate && (\r\n//               <div className=\"space-y-4 sm:space-y-8 w-full\">\r\n//                 {isLoading ? (\r\n//                   <p>Loading orders...</p>\r\n//                 ) : error ? (\r\n//                   <p className=\"text-red-500\">{error}</p>\r\n//                 ) : orderData ? (\r\n//                   Array.isArray(orderData) ? orderData.map(renderOrder) : renderOrder(orderData)\r\n//                 ) : (\r\n//                   <p>No corporate orders found.</p>\r\n//                 )}\r\n//               </div>\r\n//             )}\r\n    \r\n//             {!showCorporate && (\r\n//               <div className=\"text-center py-8\">\r\n//                 <p className=\"text-lg text-gray-700\">Events content will be displayed here.</p>\r\n//               </div>\r\n//             )}\r\n//           </div>\r\n//         </>\r\n//       );\r\n//     };\r\n\r\n// export default EventOrders;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// // import { CakeIcon, CalendarIcon, CheckCircleIcon, HomeIcon, MinusCircleIcon } from '@heroicons/react/solid';\r\n// // import axios from 'axios';\r\n// // import React, { useEffect, useState } from 'react';\r\n// // import { Link, useNavigate } from 'react-router-dom';\r\n\r\n// // const EventOrders = () => {\r\n// //   const [showCorporate, setShowCorporate] = useState(true);\r\n// //   const [expandedOrder, setExpandedOrder] = useState(null);\r\n// //   const [isLoading, setIsLoading] = useState(true);\r\n// //   const [orderData, setOrderData] = useState(null);\r\n// //   const [error, setError] = useState(null);\r\n// //   const navigate = useNavigate();\r\n\r\n// //   useEffect(() => {\r\n// //     const fetchOrders = async () => {\r\n// //       setIsLoading(true);\r\n// //       setError(null);\r\n// //       try {\r\n// //         // const token = localStorage.getItem('accessToken');\r\n// //         // console.log('Access Token:', token); // Debug: Check if token exists\r\n\r\n// //         const response = await axios.get('http://localhost:5000/api/myorders', {\r\n// //         //   headers: { token: ${token} },\r\n// //         });\r\n// //         console.log('Full API Response:', response); // Log the full response\r\n// //         console.log('API Response Data:', response.data); // Log just the data\r\n\r\n// //         if (response.data) {\r\n// //            console.log(response.data);\r\n// //           setOrderData(response.data);\r\n// //         } else {\r\n// //           setError('No data received from the server.');\r\n// //           setOrderData(null);\r\n// //         }\r\n// //       } catch (error) {\r\n// //         console.error('Error fetching corporate order data:', error);\r\n// //         setError('Failed to fetch orders. Please try again later.');\r\n// //         setOrderData(null);\r\n// //       } finally {\r\n// //         setIsLoading(false);\r\n// //       }\r\n// //     };\r\n// //     fetchOrders();\r\n// //   }, []);\r\n\r\n// //   const toggleOrderDetails = (orderId) => {\r\n// //     setExpandedOrder(expandedOrder === orderId ? null : orderId);\r\n// //   };\r\n\r\n// //   const handleViewHome = ()=>{\r\n// //     navigate('/home')\r\n// //   }\r\n\r\n// // //   const renderProgressIcons = (progress) => {\r\n// // //     const stages = ['processing', 'shipped', 'delivered'];\r\n// // //     const activeIndex = stages.indexOf(progress);\r\n    \r\n// // //     return (\r\n// // //       <div className=\"flex justify-between items-center\">\r\n// // //         {stages.map((stage, index) => (\r\n// // //           <div key={stage} className=\"flex flex-col items-center\">\r\n// // //             {index <= activeIndex ? (\r\n// // //               <CheckCircleIcon className=\"text-green-500 h-4 w-4 sm:h-6 sm:w-6 mb-1 transition-transform transform hover:scale-110\" />\r\n// // //             ) : (\r\n// // //               <MinusCircleIcon className=\"text-gray-400 h-4 w-4 sm:h-6 sm:w-6 mb-1 transition-transform transform hover:scale-110\" />\r\n// // //             )}\r\n// // //             <span className={`text-xs ${index <= activeIndex ? 'text-gray-900 font-semibold' : 'text-gray-400'}`}>\r\n// // //               {stage.charAt(0).toUpperCase() + stage.slice(1)}\r\n// // //             </span>\r\n// // //           </div>\r\n// // //         ))}\r\n// // //       </div>\r\n// // //     );\r\n// // //   };\r\n\r\n// // //   const renderOrder = (order) => (\r\n// // //     <div key={order.id || order.eventorder_generated_id} className=\"w-full bg-white rounded-lg border shadow-md hover:shadow-xl transition-shadow duration-300 mx-3 sm:mx-4\">\r\n// // //       <div\r\n// // //         className=\"flex justify-between items-center p-4 sm:p-6 bg-blue-100 cursor-pointer hover:bg-blue-200 transition-colors rounded-t-lg\"\r\n// // //         onClick={() => toggleOrderDetails(order.id || order.eventorder_generated_id)}\r\n// // //       >\r\n// // //         <div className=\"w-full\">\r\n// // //           <p className=\"text-lg sm:text-xl font-bold text-blue-700\">Order ID: {order.id || order.eventorder_generated_id}</p>\r\n// // //           <p className=\"text-xs sm:text-sm text-gray-600 mt-1\">Date: {(order.details && order.details[0]?.date) || order.date || 'N/A'}</p>\r\n// // //         </div>\r\n// // //         <div>\r\n// // //           <span className=\"text-gray-500 text-xl sm:text-2xl\">\r\n// // //             {expandedOrder === (order.id || order.eventorder_generated_id) ? '[-]' : '[+]'}\r\n// // //           </span>\r\n// // //         </div>\r\n// // //       </div>\r\n\r\n// // //       {expandedOrder === (order.id || order.eventorder_generated_id) && (\r\n// // //         <div className=\"p-4 sm:p-6 overflow-x-auto\">\r\n// // //           <table className=\"w-full bg-white min-w-max\">\r\n// // //             <thead className=\"bg-gray-100 text-left text-xs sm:text-sm\">\r\n// // //               <tr>\r\n// // //                 <th className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">Category Name</th>\r\n// // //                 <th className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">Progress</th>\r\n// // //                 <th className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">Date</th>\r\n// // //                 <th className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">Qty</th>\r\n// // //                 <th className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">Active Qty</th>\r\n// // //                 <th className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">Status</th>\r\n// // //                 <th className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">Media</th>\r\n// // //               </tr>\r\n// // //             </thead>\r\n// // //             <tbody>\r\n// // //               {(order.details || [order]).map((detail, i) => (\r\n// // //                 <tr key={i} className=\"border-t text-xs sm:text-sm hover:bg-gray-50\">\r\n// // //                   <td className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">{detail.name || 'N/A'}</td>\r\n// // //                   <td className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">{renderProgressIcons(detail.progress)}</td>\r\n// // //                   <td className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">{detail.date}</td>\r\n// // //                   <td className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">{detail.quantity}</td>\r\n// // //                   <td className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">{detail.active_quantity}</td>\r\n// // //                   <td\r\n// // //                     className={`p-2 sm:p-3 lg:p-4 font-bold whitespace-nowrap ${\r\n// // //                       detail.status === 'cancelled' ? 'text-red-500' : 'text-green-500'\r\n// // //                     }`}\r\n// // //                   >\r\n// // //                     {detail.status}\r\n// // //                   </td>\r\n// // //                   <td className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">{detail.category_media || 'N/A'}</td>\r\n// // //                 </tr>\r\n// // //               ))}\r\n// // //             </tbody>\r\n// // //           </table>\r\n// // //         </div>\r\n// // //       )}\r\n// // //     </div>\r\n// // //   );\r\n\r\n// //   return (\r\n// //     <>\r\n// //      <header className=\"w-full bg-green-500 h-16 flex items-center pl-4\">\r\n// //       <Link to='/home'>\r\n// //   <HomeIcon className=\"h-6 w-6 sm:h-8 sm:w-8 text-white mr-2\" onClick={handleViewHome}/> \r\n// //   </Link>\r\n// //   <h1 className=\"text-2xl sm:text-3xl lg:text-4xl text-white\">\r\n// //     Your Orders\r\n// //   </h1>\r\n// // </header>\r\n\r\n// //       <div className=\"w-full my-4 sm:my-10 px-4 sm:px-6 lg:px-8 xl:px-0 bg-gradient-to-r from-blue-50 to-white shadow-xl rounded-lg\">\r\n// //         <div className=\"flex justify-center gap-4 sm:gap-6 mb-6 sm:mb-10\">\r\n// //           <button\r\n// //             className={`py-2 px-4 sm:py-3 sm:px-8 rounded-full font-semibold text-sm sm:text-lg transition-all duration-300 transform ${\r\n// //               !showCorporate ? 'bg-green-500 text-white shadow-lg hover:scale-105' : 'bg-gray-300 text-gray-700 hover:scale-105'\r\n// //             }`}\r\n// //             onClick={() => setShowCorporate(false)}\r\n// //           >\r\n// //             <CalendarIcon className=\"h-5 w-5 inline-block mr-2\" />\r\n// //             Events\r\n// //           </button>\r\n// //           <button\r\n// //             className={`py-2 px-4 sm:py-3 sm:px-8 rounded-full font-semibold text-sm sm:text-lg transition-all duration-300 transform ${\r\n// //               showCorporate ? 'bg-yellow-500 text-white shadow-lg hover:scale-105' : 'bg-gray-300 text-gray-700 hover:scale-105'\r\n// //             }`}\r\n// //             onClick={() => setShowCorporate(true)}\r\n// //           >\r\n// //             <CakeIcon className=\"h-5 w-5 inline-block mr-2\" />\r\n// //             Events\r\n// //           </button>\r\n// //         </div>\r\n\r\n// //         {showCorporate && (\r\n// //           <div className=\"space-y-4 sm:space-y-8 w-full\">\r\n// //             {isLoading ? (\r\n// //               <p>Loading orders...</p>\r\n// //             ) : error ? (\r\n// //               <p className=\"text-red-500\">{error}</p>\r\n// //             ) : orderData ? (\r\n// //               Array.isArray(orderData) ? orderData.map(renderOrder) : renderOrder(orderData)\r\n// //             ) : (\r\n// //               <p>No corporate orders found.</p>\r\n// //             )}\r\n// //           </div>\r\n// //         )}\r\n\r\n// //         {!showCorporate && (\r\n// //           <div className=\"text-center py-8\">\r\n// //             <p className=\"text-lg text-gray-700\">Events content will be displayed here.</p>\r\n// //           </div>\r\n// //         )}\r\n// //       </div>\r\n// //     </>\r\n// //   );\r\n// // };\r\n\r\n// // export default EventOrders;\r\n\r\n\r\n"],"mappings":"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ACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AA0BA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}