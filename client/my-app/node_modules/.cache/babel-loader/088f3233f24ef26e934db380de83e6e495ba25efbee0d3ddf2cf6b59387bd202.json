{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Karishma\\\\Desktop\\\\compswipe\\\\compswipe\\\\client\\\\my-app\\\\src\\\\myorders.js\",\n  _s = $RefreshSig$();\nimport { CakeIcon, CalendarIcon, HomeIcon } from '@heroicons/react/solid';\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventOrders = () => {\n  _s();\n  const [showCorporate, setShowCorporate] = useState(true);\n  const [expandedOrder, setExpandedOrder] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [orderData, setOrderData] = useState(null);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchOrders = async () => {\n      setIsLoading(true);\n      setError(null);\n      try {\n        const response = await axios.get('http://localhost:5000/api/myorders');\n        console.log(\"res\", response);\n        if (response.data) {\n          setOrderData(response.data);\n          console.log(orderData);\n        } else {\n          setError('No data received from the server.');\n          setOrderData(null);\n        }\n      } catch (error) {\n        setError('Failed to fetch orders. Please try again later.');\n        setOrderData(null);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchOrders();\n  }, []);\n  const toggleOrderDetails = orderId => {\n    setExpandedOrder(expandedOrder === orderId ? null : orderId);\n  };\n  const handleViewHome = () => {\n    navigate('/home');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"w-full bg-green-500 h-16 flex items-center pl-4\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/home\",\n        children: /*#__PURE__*/_jsxDEV(HomeIcon, {\n          className: \"h-6 w-6 sm:h-8 sm:w-8 text-white mr-2\",\n          onClick: handleViewHome\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl sm:text-3xl lg:text-4xl text-white\",\n        children: \"Your Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full my-4 sm:my-10 px-4 sm:px-6 lg:px-8 xl:px-0 bg-gradient-to-r from-blue-50 to-white shadow-xl rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center gap-4 sm:gap-6 mb-6 sm:mb-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `py-2 px-4 sm:py-3 sm:px-8 rounded-full font-semibold text-sm sm:text-lg transition-all duration-300 transform ${!showCorporate ? 'bg-green-500 text-white shadow-lg hover:scale-105' : 'bg-gray-300 text-gray-700 hover:scale-105'}`,\n          onClick: () => setShowCorporate(false),\n          children: [/*#__PURE__*/_jsxDEV(CalendarIcon, {\n            className: \"h-5 w-5 inline-block mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), \"Events\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `py-2 px-4 sm:py-3 sm:px-8 rounded-full font-semibold text-sm sm:text-lg transition-all duration-300 transform ${showCorporate ? 'bg-yellow-500 text-white shadow-lg hover:scale-105' : 'bg-gray-300 text-gray-700 hover:scale-105'}`,\n          onClick: () => setShowCorporate(true),\n          children: [/*#__PURE__*/_jsxDEV(CakeIcon, {\n            className: \"h-5 w-5 inline-block mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), \"Corporate\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading orders...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this) : orderData ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n        children: Array.isArray(orderData) && orderData.map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border rounded-lg p-4 cursor-pointer\",\n          onClick: () => toggleOrderDetails(order.id),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Order ID: \", order.id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Date of Order: \", order.date]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Amount: \\u20B9\", order.amount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bg-red-100 text-red-500 px-2 py-1 rounded\",\n              children: \"Buy again\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-100 p-2 rounded\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-center font-bold mb-2\",\n              children: \"Order progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex flex-col items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-6 h-6 rounded-full bg-yellow-400 mb-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-xs\",\n                  children: \"Processing\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex flex-col items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-6 h-6 rounded-full bg-blue-400 mb-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-xs\",\n                  children: \"Shipped\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex flex-col items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-6 h-6 rounded-full bg-green-400 mb-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-xs\",\n                  children: \"Delivery\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this), expandedOrder === order.id && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 bg-white p-4 rounded-lg shadow\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-bold mb-2\",\n              children: \"Order Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: order.items.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"mb-2\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"/api/placeholder/50/50\",\n                    alt: item.name,\n                    className: \"w-12 h-12 rounded-full mr-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"font-bold\",\n                      children: item.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 121,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"No of plates: \", item.plates]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 122,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"Price per \", item.pricePerUnit ? 'unit' : 'kg', \": \\u20B9\", item.pricePerUnit || item.pricePerKg]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 123,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"Quantity: \", item.quantity, \" \", item.pricePerUnit ? 'units' : 'kgs']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 124,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"Amount: \\u20B9\", item.amount]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 125,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 27\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 19\n          }, this)]\n        }, order.id || order.eventorder_generated_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No corporate orders found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(EventOrders, \"ZhNzJ3U1pUmGqg8GKrakJXYnbzE=\", false, function () {\n  return [useNavigate];\n});\n_c = EventOrders;\nexport default EventOrders;\n\n// import { CakeIcon, CalendarIcon, CheckCircleIcon, HomeIcon, MinusCircleIcon } from '@heroicons/react/solid';\n// import axios from 'axios';\n// import React, { useEffect, useState } from 'react';\n// import { Link, useNavigate } from 'react-router-dom';\n\n// const EventOrders = () => {\n//   const [showCorporate, setShowCorporate] = useState(true);\n//   const [expandedOrder, setExpandedOrder] = useState(null);\n//   const [isLoading, setIsLoading] = useState(true);\n//   const [orderData, setOrderData] = useState(null);\n//   const [error, setError] = useState(null);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const fetchOrders = async () => {\n//       setIsLoading(true);\n//       setError(null);\n//       try {\n//         // const token = localStorage.getItem('accessToken');\n//         // console.log('Access Token:', token); // Debug: Check if token exists\n\n//         const response = await axios.get('http://localhost:5000/api/myorders', {\n//         //   headers: { token: ${token} },\n//         });\n//         console.log('Full API Response:', response); // Log the full response\n//         console.log('API Response Data:', response.data); // Log just the data\n\n//         if (response.data) {\n//            console.log(response.data);\n//           setOrderData(response.data);\n//         } else {\n//           setError('No data received from the server.');\n//           setOrderData(null);\n//         }\n//       } catch (error) {\n//         console.error('Error fetching corporate order data:', error);\n//         setError('Failed to fetch orders. Please try again later.');\n//         setOrderData(null);\n//       } finally {\n//         setIsLoading(false);\n//       }\n//     };\n//     fetchOrders();\n//   }, []);\n\n//   const toggleOrderDetails = (orderId) => {\n//     setExpandedOrder(expandedOrder === orderId ? null : orderId);\n//   };\n\n//   const handleViewHome = ()=>{\n//     navigate('/home')\n//   }\n\n// //   const renderProgressIcons = (progress) => {\n// //     const stages = ['processing', 'shipped', 'delivered'];\n// //     const activeIndex = stages.indexOf(progress);\n\n// //     return (\n// //       <div className=\"flex justify-between items-center\">\n// //         {stages.map((stage, index) => (\n// //           <div key={stage} className=\"flex flex-col items-center\">\n// //             {index <= activeIndex ? (\n// //               <CheckCircleIcon className=\"text-green-500 h-4 w-4 sm:h-6 sm:w-6 mb-1 transition-transform transform hover:scale-110\" />\n// //             ) : (\n// //               <MinusCircleIcon className=\"text-gray-400 h-4 w-4 sm:h-6 sm:w-6 mb-1 transition-transform transform hover:scale-110\" />\n// //             )}\n// //             <span className={`text-xs ${index <= activeIndex ? 'text-gray-900 font-semibold' : 'text-gray-400'}`}>\n// //               {stage.charAt(0).toUpperCase() + stage.slice(1)}\n// //             </span>\n// //           </div>\n// //         ))}\n// //       </div>\n// //     );\n// //   };\n\n// //   const renderOrder = (order) => (\n// //     <div key={order.id || order.eventorder_generated_id} className=\"w-full bg-white rounded-lg border shadow-md hover:shadow-xl transition-shadow duration-300 mx-3 sm:mx-4\">\n// //       <div\n// //         className=\"flex justify-between items-center p-4 sm:p-6 bg-blue-100 cursor-pointer hover:bg-blue-200 transition-colors rounded-t-lg\"\n// //         onClick={() => toggleOrderDetails(order.id || order.eventorder_generated_id)}\n// //       >\n// //         <div className=\"w-full\">\n// //           <p className=\"text-lg sm:text-xl font-bold text-blue-700\">Order ID: {order.id || order.eventorder_generated_id}</p>\n// //           <p className=\"text-xs sm:text-sm text-gray-600 mt-1\">Date: {(order.details && order.details[0]?.date) || order.date || 'N/A'}</p>\n// //         </div>\n// //         <div>\n// //           <span className=\"text-gray-500 text-xl sm:text-2xl\">\n// //             {expandedOrder === (order.id || order.eventorder_generated_id) ? '[-]' : '[+]'}\n// //           </span>\n// //         </div>\n// //       </div>\n\n// //       {expandedOrder === (order.id || order.eventorder_generated_id) && (\n// //         <div className=\"p-4 sm:p-6 overflow-x-auto\">\n// //           <table className=\"w-full bg-white min-w-max\">\n// //             <thead className=\"bg-gray-100 text-left text-xs sm:text-sm\">\n// //               <tr>\n// //                 <th className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">Category Name</th>\n// //                 <th className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">Progress</th>\n// //                 <th className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">Date</th>\n// //                 <th className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">Qty</th>\n// //                 <th className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">Active Qty</th>\n// //                 <th className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">Status</th>\n// //                 <th className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">Media</th>\n// //               </tr>\n// //             </thead>\n// //             <tbody>\n// //               {(order.details || [order]).map((detail, i) => (\n// //                 <tr key={i} className=\"border-t text-xs sm:text-sm hover:bg-gray-50\">\n// //                   <td className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">{detail.name || 'N/A'}</td>\n// //                   <td className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">{renderProgressIcons(detail.progress)}</td>\n// //                   <td className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">{detail.date}</td>\n// //                   <td className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">{detail.quantity}</td>\n// //                   <td className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">{detail.active_quantity}</td>\n// //                   <td\n// //                     className={`p-2 sm:p-3 lg:p-4 font-bold whitespace-nowrap ${\n// //                       detail.status === 'cancelled' ? 'text-red-500' : 'text-green-500'\n// //                     }`}\n// //                   >\n// //                     {detail.status}\n// //                   </td>\n// //                   <td className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">{detail.category_media || 'N/A'}</td>\n// //                 </tr>\n// //               ))}\n// //             </tbody>\n// //           </table>\n// //         </div>\n// //       )}\n// //     </div>\n// //   );\n\n//   return (\n//     <>\n//      <header className=\"w-full bg-green-500 h-16 flex items-center pl-4\">\n//       <Link to='/home'>\n//   <HomeIcon className=\"h-6 w-6 sm:h-8 sm:w-8 text-white mr-2\" onClick={handleViewHome}/> \n//   </Link>\n//   <h1 className=\"text-2xl sm:text-3xl lg:text-4xl text-white\">\n//     Your Orders\n//   </h1>\n// </header>\n\n//       <div className=\"w-full my-4 sm:my-10 px-4 sm:px-6 lg:px-8 xl:px-0 bg-gradient-to-r from-blue-50 to-white shadow-xl rounded-lg\">\n//         <div className=\"flex justify-center gap-4 sm:gap-6 mb-6 sm:mb-10\">\n//           <button\n//             className={`py-2 px-4 sm:py-3 sm:px-8 rounded-full font-semibold text-sm sm:text-lg transition-all duration-300 transform ${\n//               !showCorporate ? 'bg-green-500 text-white shadow-lg hover:scale-105' : 'bg-gray-300 text-gray-700 hover:scale-105'\n//             }`}\n//             onClick={() => setShowCorporate(false)}\n//           >\n//             <CalendarIcon className=\"h-5 w-5 inline-block mr-2\" />\n//             Events\n//           </button>\n//           <button\n//             className={`py-2 px-4 sm:py-3 sm:px-8 rounded-full font-semibold text-sm sm:text-lg transition-all duration-300 transform ${\n//               showCorporate ? 'bg-yellow-500 text-white shadow-lg hover:scale-105' : 'bg-gray-300 text-gray-700 hover:scale-105'\n//             }`}\n//             onClick={() => setShowCorporate(true)}\n//           >\n//             <CakeIcon className=\"h-5 w-5 inline-block mr-2\" />\n//             Events\n//           </button>\n//         </div>\n\n//         {showCorporate && (\n//           <div className=\"space-y-4 sm:space-y-8 w-full\">\n//             {isLoading ? (\n//               <p>Loading orders...</p>\n//             ) : error ? (\n//               <p className=\"text-red-500\">{error}</p>\n//             ) : orderData ? (\n//               Array.isArray(orderData) ? orderData.map(renderOrder) : renderOrder(orderData)\n//             ) : (\n//               <p>No corporate orders found.</p>\n//             )}\n//           </div>\n//         )}\n\n//         {!showCorporate && (\n//           <div className=\"text-center py-8\">\n//             <p className=\"text-lg text-gray-700\">Events content will be displayed here.</p>\n//           </div>\n//         )}\n//       </div>\n//     </>\n//   );\n// };\n\n// export default EventOrders;\n\n// import React, { useState } from 'react';\n\n// const OrderDashboard = () => {\n//   const [openOrderId, setOpenOrderId] = useState(null);\n\n//   const orders = [\n//     {\n//       id: '6988647684',\n//       date: '10/8/2024',\n//       amount: 5504,\n//       items: [\n//         { name: 'Idly', plates: 150, pricePerUnit: 5, quantity: 4, amount: 600 },\n//         { name: 'Biryani', plates: 150, pricePerKg: 3, quantity: 5, amount: 600 },\n//         { name: 'Biryani', plates: 150, pricePerKg: 5, quantity: 3, amount: 600 },\n//       ],\n//       status: 'Processing',\n//     },\n//     // Add more orders here if needed\n//   ];\n\n//   const handleOrderClick = (order) => {\n//     if (openOrderId === order.id) {\n//       // If the same order is clicked, toggle details\n//       setOpenOrderId(null);\n//     } else {\n//       // Set the new order ID to open\n//       setOpenOrderId(order.id);\n//     }\n//   };\n\n//   return (\n//     <div className=\"container mx-auto p-4\">\n//       <h1 className=\"text-2xl font-bold mb-4 bg-green-600 text-white p-2\">Your Orders</h1>\n//       <div className=\"flex space-x-2 mb-4\">\n//         <button className=\"bg-orange-100 text-orange-500 border border-orange-500 rounded-full px-4 py-1\">CORPORATE</button>\n//         <button className=\"bg-blue-100 text-blue-500 border border-blue-500 rounded-full px-4 py-1\">EVENT</button>\n//       </div>\n//       <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n//         {orders.map((order) => (\n//           <div key={order.id} className=\"border rounded-lg p-4 cursor-pointer\" onClick={() => handleOrderClick(order)}>\n//             <div className=\"flex justify-between items-center mb-2\">\n//               <div>\n//                 <p>Order ID: {order.id}</p>\n//                 <p>Date of Order: {order.date}</p>\n//                 <p>Amount: ₹{order.amount}</p>\n//               </div>\n//               <button className=\"bg-red-100 text-red-500 px-2 py-1 rounded\">Buy again</button>\n//             </div>\n//             <div className=\"bg-gray-100 p-2 rounded\">\n//               <h3 className=\"text-center font-bold mb-2\">Order progress</h3>\n//               <div className=\"flex justify-between\">\n//                 <div className=\"flex flex-col items-center\">\n//                   <div className=\"w-6 h-6 rounded-full bg-yellow-400 mb-1\"></div>\n//                   <span className=\"text-xs\">Processing</span>\n//                 </div>\n//                 <div className=\"flex flex-col items-center\">\n//                   <div className=\"w-6 h-6 rounded-full bg-blue-400 mb-1\"></div>\n//                   <span className=\"text-xs\">Shipped</span>\n//                 </div>\n//                 <div className=\"flex flex-col items-center\">\n//                   <div className=\"w-6 h-6 rounded-full bg-green-400 mb-1\"></div>\n//                   <span className=\"text-xs\">Delivery</span>\n//                 </div>\n//               </div>\n//             </div>\n//             {openOrderId === order.id && (\n//               <div className=\"mt-4 bg-white p-4 rounded-lg shadow\">\n//                 <button onClick={() => handleOrderClick(order)} className=\"bg-blue-500 text-white px-4 py-2 rounded mb-4 w-full text-left flex justify-between items-center\">\n//                   {openOrderId === order.id ? 'Hide Details' : 'Show Details'}\n//                   <span className=\"text-xs\">{openOrderId === order.id ? '▲' : '▼'}</span>\n//                 </button>\n//                 <div>\n//                   <h2 className=\"text-xl font-bold mb-2\">Order Details</h2>\n//                   <ul>\n//                     {order.items.map((item, index) => (\n//                       <li key={index} className=\"mb-2\">\n//                         <div className=\"flex items-center\">\n//                           <img src=\"/api/placeholder/50/50\" alt={item.name} className=\"w-12 h-12 rounded-full mr-2\" />\n//                           <div>\n//                             <p className=\"font-bold\">{item.name}</p>\n//                             <p>No of plates: {item.plates}</p>\n//                             <p>Price per {item.pricePerUnit ? 'unit' : 'kg'}: ₹{item.pricePerUnit || item.pricePerKg}</p>\n//                             <p>Quantity: {item.quantity} {item.pricePerUnit ? 'units' : 'kgs'}</p>\n//                             <p>Amount: ₹{item.amount}</p>\n//                           </div>\n//                         </div>\n//                       </li>\n//                     ))}\n//                   </ul>\n//                 </div>\n//               </div>\n//             )}\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default OrderDashboard;\nvar _c;\n$RefreshReg$(_c, \"EventOrders\");","map":{"version":3,"names":["CakeIcon","CalendarIcon","HomeIcon","axios","React","useEffect","useState","Link","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","EventOrders","_s","showCorporate","setShowCorporate","expandedOrder","setExpandedOrder","isLoading","setIsLoading","orderData","setOrderData","error","setError","navigate","fetchOrders","response","get","console","log","data","toggleOrderDetails","orderId","handleViewHome","children","className","to","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","map","order","id","date","amount","items","item","index","src","alt","name","plates","pricePerUnit","pricePerKg","quantity","eventorder_generated_id","_c","$RefreshReg$"],"sources":["C:/Users/Karishma/Desktop/compswipe/compswipe/client/my-app/src/myorders.js"],"sourcesContent":["import { CakeIcon, CalendarIcon, HomeIcon } from '@heroicons/react/solid';\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\nconst EventOrders = () => {\r\n  const [showCorporate, setShowCorporate] = useState(true);\r\n  const [expandedOrder, setExpandedOrder] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [orderData, setOrderData] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchOrders = async () => {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/myorders');\r\n        console.log(\"res\",response);\r\n        if (response.data) {\r\n          setOrderData(response.data);\r\n          console.log(orderData);\r\n        } else {\r\n          setError('No data received from the server.');\r\n          setOrderData(null);\r\n        }\r\n      } catch (error) {\r\n        setError('Failed to fetch orders. Please try again later.');\r\n        setOrderData(null);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    fetchOrders();\r\n  }, []);\r\n\r\n  const toggleOrderDetails = (orderId) => {\r\n    setExpandedOrder(expandedOrder === orderId ? null : orderId);\r\n  };\r\n\r\n  const handleViewHome = () => {\r\n    navigate('/home');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header className=\"w-full bg-green-500 h-16 flex items-center pl-4\">\r\n        <Link to=\"/home\">\r\n          <HomeIcon className=\"h-6 w-6 sm:h-8 sm:w-8 text-white mr-2\" onClick={handleViewHome} />\r\n        </Link>\r\n        <h1 className=\"text-2xl sm:text-3xl lg:text-4xl text-white\">Your Orders</h1>\r\n      </header>\r\n\r\n      <div className=\"w-full my-4 sm:my-10 px-4 sm:px-6 lg:px-8 xl:px-0 bg-gradient-to-r from-blue-50 to-white shadow-xl rounded-lg\">\r\n        <div className=\"flex justify-center gap-4 sm:gap-6 mb-6 sm:mb-10\">\r\n          <button\r\n            className={`py-2 px-4 sm:py-3 sm:px-8 rounded-full font-semibold text-sm sm:text-lg transition-all duration-300 transform ${\r\n              !showCorporate ? 'bg-green-500 text-white shadow-lg hover:scale-105' : 'bg-gray-300 text-gray-700 hover:scale-105'\r\n            }`}\r\n            onClick={() => setShowCorporate(false)}\r\n          >\r\n            <CalendarIcon className=\"h-5 w-5 inline-block mr-2\" />\r\n            Events\r\n          </button>\r\n          <button\r\n            className={`py-2 px-4 sm:py-3 sm:px-8 rounded-full font-semibold text-sm sm:text-lg transition-all duration-300 transform ${\r\n              showCorporate ? 'bg-yellow-500 text-white shadow-lg hover:scale-105' : 'bg-gray-300 text-gray-700 hover:scale-105'\r\n            }`}\r\n            onClick={() => setShowCorporate(true)}\r\n          >\r\n            <CakeIcon className=\"h-5 w-5 inline-block mr-2\" />\r\n            Corporate\r\n          </button>\r\n        </div>\r\n\r\n        {isLoading ? (\r\n          <p>Loading orders...</p>\r\n        ) : error ? (\r\n          <p className=\"text-red-500\">{error}</p>\r\n        ) : orderData ? (\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n           {Array.isArray(orderData) && orderData.map((order) => (\r\n              <div key={order.id || order.eventorder_generated_id} className=\"border rounded-lg p-4 cursor-pointer\" onClick={() => toggleOrderDetails(order.id)}>\r\n                <div className=\"flex justify-between items-center mb-2\">\r\n                  <div>\r\n                    <p>Order ID: {order.id}</p>\r\n                    <p>Date of Order: {order.date}</p>\r\n                    <p>Amount: ₹{order.amount}</p>\r\n                  </div>\r\n                  <button className=\"bg-red-100 text-red-500 px-2 py-1 rounded\">Buy again</button>\r\n                </div>\r\n\r\n                <div className=\"bg-gray-100 p-2 rounded\">\r\n                  <h3 className=\"text-center font-bold mb-2\">Order progress</h3>\r\n                  <div className=\"flex justify-between\">\r\n                    <div className=\"flex flex-col items-center\">\r\n                      <div className=\"w-6 h-6 rounded-full bg-yellow-400 mb-1\"></div>\r\n                      <span className=\"text-xs\">Processing</span>\r\n                    </div>\r\n                    <div className=\"flex flex-col items-center\">\r\n                      <div className=\"w-6 h-6 rounded-full bg-blue-400 mb-1\"></div>\r\n                      <span className=\"text-xs\">Shipped</span>\r\n                    </div>\r\n                    <div className=\"flex flex-col items-center\">\r\n                      <div className=\"w-6 h-6 rounded-full bg-green-400 mb-1\"></div>\r\n                      <span className=\"text-xs\">Delivery</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {expandedOrder === order.id && (\r\n                  <div className=\"mt-4 bg-white p-4 rounded-lg shadow\">\r\n                    <h2 className=\"text-xl font-bold mb-2\">Order Details</h2>\r\n                    <ul>\r\n                      {order.items.map((item, index) => (\r\n                        <li key={index} className=\"mb-2\">\r\n                          <div className=\"flex items-center\">\r\n                            <img src=\"/api/placeholder/50/50\" alt={item.name} className=\"w-12 h-12 rounded-full mr-2\" />\r\n                            <div>\r\n                              <p className=\"font-bold\">{item.name}</p>\r\n                              <p>No of plates: {item.plates}</p>\r\n                              <p>Price per {item.pricePerUnit ? 'unit' : 'kg'}: ₹{item.pricePerUnit || item.pricePerKg}</p>\r\n                              <p>Quantity: {item.quantity} {item.pricePerUnit ? 'units' : 'kgs'}</p>\r\n                              <p>Amount: ₹{item.amount}</p>\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ))}\r\n            \r\n          </div>\r\n        ) : (\r\n          <p>No corporate orders found.</p>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EventOrders;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import { CakeIcon, CalendarIcon, CheckCircleIcon, HomeIcon, MinusCircleIcon } from '@heroicons/react/solid';\r\n// import axios from 'axios';\r\n// import React, { useEffect, useState } from 'react';\r\n// import { Link, useNavigate } from 'react-router-dom';\r\n\r\n// const EventOrders = () => {\r\n//   const [showCorporate, setShowCorporate] = useState(true);\r\n//   const [expandedOrder, setExpandedOrder] = useState(null);\r\n//   const [isLoading, setIsLoading] = useState(true);\r\n//   const [orderData, setOrderData] = useState(null);\r\n//   const [error, setError] = useState(null);\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     const fetchOrders = async () => {\r\n//       setIsLoading(true);\r\n//       setError(null);\r\n//       try {\r\n//         // const token = localStorage.getItem('accessToken');\r\n//         // console.log('Access Token:', token); // Debug: Check if token exists\r\n\r\n//         const response = await axios.get('http://localhost:5000/api/myorders', {\r\n//         //   headers: { token: ${token} },\r\n//         });\r\n//         console.log('Full API Response:', response); // Log the full response\r\n//         console.log('API Response Data:', response.data); // Log just the data\r\n\r\n//         if (response.data) {\r\n//            console.log(response.data);\r\n//           setOrderData(response.data);\r\n//         } else {\r\n//           setError('No data received from the server.');\r\n//           setOrderData(null);\r\n//         }\r\n//       } catch (error) {\r\n//         console.error('Error fetching corporate order data:', error);\r\n//         setError('Failed to fetch orders. Please try again later.');\r\n//         setOrderData(null);\r\n//       } finally {\r\n//         setIsLoading(false);\r\n//       }\r\n//     };\r\n//     fetchOrders();\r\n//   }, []);\r\n\r\n//   const toggleOrderDetails = (orderId) => {\r\n//     setExpandedOrder(expandedOrder === orderId ? null : orderId);\r\n//   };\r\n\r\n//   const handleViewHome = ()=>{\r\n//     navigate('/home')\r\n//   }\r\n\r\n// //   const renderProgressIcons = (progress) => {\r\n// //     const stages = ['processing', 'shipped', 'delivered'];\r\n// //     const activeIndex = stages.indexOf(progress);\r\n    \r\n// //     return (\r\n// //       <div className=\"flex justify-between items-center\">\r\n// //         {stages.map((stage, index) => (\r\n// //           <div key={stage} className=\"flex flex-col items-center\">\r\n// //             {index <= activeIndex ? (\r\n// //               <CheckCircleIcon className=\"text-green-500 h-4 w-4 sm:h-6 sm:w-6 mb-1 transition-transform transform hover:scale-110\" />\r\n// //             ) : (\r\n// //               <MinusCircleIcon className=\"text-gray-400 h-4 w-4 sm:h-6 sm:w-6 mb-1 transition-transform transform hover:scale-110\" />\r\n// //             )}\r\n// //             <span className={`text-xs ${index <= activeIndex ? 'text-gray-900 font-semibold' : 'text-gray-400'}`}>\r\n// //               {stage.charAt(0).toUpperCase() + stage.slice(1)}\r\n// //             </span>\r\n// //           </div>\r\n// //         ))}\r\n// //       </div>\r\n// //     );\r\n// //   };\r\n\r\n// //   const renderOrder = (order) => (\r\n// //     <div key={order.id || order.eventorder_generated_id} className=\"w-full bg-white rounded-lg border shadow-md hover:shadow-xl transition-shadow duration-300 mx-3 sm:mx-4\">\r\n// //       <div\r\n// //         className=\"flex justify-between items-center p-4 sm:p-6 bg-blue-100 cursor-pointer hover:bg-blue-200 transition-colors rounded-t-lg\"\r\n// //         onClick={() => toggleOrderDetails(order.id || order.eventorder_generated_id)}\r\n// //       >\r\n// //         <div className=\"w-full\">\r\n// //           <p className=\"text-lg sm:text-xl font-bold text-blue-700\">Order ID: {order.id || order.eventorder_generated_id}</p>\r\n// //           <p className=\"text-xs sm:text-sm text-gray-600 mt-1\">Date: {(order.details && order.details[0]?.date) || order.date || 'N/A'}</p>\r\n// //         </div>\r\n// //         <div>\r\n// //           <span className=\"text-gray-500 text-xl sm:text-2xl\">\r\n// //             {expandedOrder === (order.id || order.eventorder_generated_id) ? '[-]' : '[+]'}\r\n// //           </span>\r\n// //         </div>\r\n// //       </div>\r\n\r\n// //       {expandedOrder === (order.id || order.eventorder_generated_id) && (\r\n// //         <div className=\"p-4 sm:p-6 overflow-x-auto\">\r\n// //           <table className=\"w-full bg-white min-w-max\">\r\n// //             <thead className=\"bg-gray-100 text-left text-xs sm:text-sm\">\r\n// //               <tr>\r\n// //                 <th className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">Category Name</th>\r\n// //                 <th className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">Progress</th>\r\n// //                 <th className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">Date</th>\r\n// //                 <th className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">Qty</th>\r\n// //                 <th className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">Active Qty</th>\r\n// //                 <th className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">Status</th>\r\n// //                 <th className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">Media</th>\r\n// //               </tr>\r\n// //             </thead>\r\n// //             <tbody>\r\n// //               {(order.details || [order]).map((detail, i) => (\r\n// //                 <tr key={i} className=\"border-t text-xs sm:text-sm hover:bg-gray-50\">\r\n// //                   <td className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">{detail.name || 'N/A'}</td>\r\n// //                   <td className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">{renderProgressIcons(detail.progress)}</td>\r\n// //                   <td className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">{detail.date}</td>\r\n// //                   <td className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">{detail.quantity}</td>\r\n// //                   <td className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">{detail.active_quantity}</td>\r\n// //                   <td\r\n// //                     className={`p-2 sm:p-3 lg:p-4 font-bold whitespace-nowrap ${\r\n// //                       detail.status === 'cancelled' ? 'text-red-500' : 'text-green-500'\r\n// //                     }`}\r\n// //                   >\r\n// //                     {detail.status}\r\n// //                   </td>\r\n// //                   <td className=\"p-2 sm:p-3 lg:p-4 whitespace-nowrap\">{detail.category_media || 'N/A'}</td>\r\n// //                 </tr>\r\n// //               ))}\r\n// //             </tbody>\r\n// //           </table>\r\n// //         </div>\r\n// //       )}\r\n// //     </div>\r\n// //   );\r\n\r\n//   return (\r\n//     <>\r\n//      <header className=\"w-full bg-green-500 h-16 flex items-center pl-4\">\r\n//       <Link to='/home'>\r\n//   <HomeIcon className=\"h-6 w-6 sm:h-8 sm:w-8 text-white mr-2\" onClick={handleViewHome}/> \r\n//   </Link>\r\n//   <h1 className=\"text-2xl sm:text-3xl lg:text-4xl text-white\">\r\n//     Your Orders\r\n//   </h1>\r\n// </header>\r\n\r\n//       <div className=\"w-full my-4 sm:my-10 px-4 sm:px-6 lg:px-8 xl:px-0 bg-gradient-to-r from-blue-50 to-white shadow-xl rounded-lg\">\r\n//         <div className=\"flex justify-center gap-4 sm:gap-6 mb-6 sm:mb-10\">\r\n//           <button\r\n//             className={`py-2 px-4 sm:py-3 sm:px-8 rounded-full font-semibold text-sm sm:text-lg transition-all duration-300 transform ${\r\n//               !showCorporate ? 'bg-green-500 text-white shadow-lg hover:scale-105' : 'bg-gray-300 text-gray-700 hover:scale-105'\r\n//             }`}\r\n//             onClick={() => setShowCorporate(false)}\r\n//           >\r\n//             <CalendarIcon className=\"h-5 w-5 inline-block mr-2\" />\r\n//             Events\r\n//           </button>\r\n//           <button\r\n//             className={`py-2 px-4 sm:py-3 sm:px-8 rounded-full font-semibold text-sm sm:text-lg transition-all duration-300 transform ${\r\n//               showCorporate ? 'bg-yellow-500 text-white shadow-lg hover:scale-105' : 'bg-gray-300 text-gray-700 hover:scale-105'\r\n//             }`}\r\n//             onClick={() => setShowCorporate(true)}\r\n//           >\r\n//             <CakeIcon className=\"h-5 w-5 inline-block mr-2\" />\r\n//             Events\r\n//           </button>\r\n//         </div>\r\n\r\n//         {showCorporate && (\r\n//           <div className=\"space-y-4 sm:space-y-8 w-full\">\r\n//             {isLoading ? (\r\n//               <p>Loading orders...</p>\r\n//             ) : error ? (\r\n//               <p className=\"text-red-500\">{error}</p>\r\n//             ) : orderData ? (\r\n//               Array.isArray(orderData) ? orderData.map(renderOrder) : renderOrder(orderData)\r\n//             ) : (\r\n//               <p>No corporate orders found.</p>\r\n//             )}\r\n//           </div>\r\n//         )}\r\n\r\n//         {!showCorporate && (\r\n//           <div className=\"text-center py-8\">\r\n//             <p className=\"text-lg text-gray-700\">Events content will be displayed here.</p>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default EventOrders;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n\r\n// const OrderDashboard = () => {\r\n//   const [openOrderId, setOpenOrderId] = useState(null);\r\n\r\n//   const orders = [\r\n//     {\r\n//       id: '6988647684',\r\n//       date: '10/8/2024',\r\n//       amount: 5504,\r\n//       items: [\r\n//         { name: 'Idly', plates: 150, pricePerUnit: 5, quantity: 4, amount: 600 },\r\n//         { name: 'Biryani', plates: 150, pricePerKg: 3, quantity: 5, amount: 600 },\r\n//         { name: 'Biryani', plates: 150, pricePerKg: 5, quantity: 3, amount: 600 },\r\n//       ],\r\n//       status: 'Processing',\r\n//     },\r\n//     // Add more orders here if needed\r\n//   ];\r\n\r\n//   const handleOrderClick = (order) => {\r\n//     if (openOrderId === order.id) {\r\n//       // If the same order is clicked, toggle details\r\n//       setOpenOrderId(null);\r\n//     } else {\r\n//       // Set the new order ID to open\r\n//       setOpenOrderId(order.id);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container mx-auto p-4\">\r\n//       <h1 className=\"text-2xl font-bold mb-4 bg-green-600 text-white p-2\">Your Orders</h1>\r\n//       <div className=\"flex space-x-2 mb-4\">\r\n//         <button className=\"bg-orange-100 text-orange-500 border border-orange-500 rounded-full px-4 py-1\">CORPORATE</button>\r\n//         <button className=\"bg-blue-100 text-blue-500 border border-blue-500 rounded-full px-4 py-1\">EVENT</button>\r\n//       </div>\r\n//       <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n//         {orders.map((order) => (\r\n//           <div key={order.id} className=\"border rounded-lg p-4 cursor-pointer\" onClick={() => handleOrderClick(order)}>\r\n//             <div className=\"flex justify-between items-center mb-2\">\r\n//               <div>\r\n//                 <p>Order ID: {order.id}</p>\r\n//                 <p>Date of Order: {order.date}</p>\r\n//                 <p>Amount: ₹{order.amount}</p>\r\n//               </div>\r\n//               <button className=\"bg-red-100 text-red-500 px-2 py-1 rounded\">Buy again</button>\r\n//             </div>\r\n//             <div className=\"bg-gray-100 p-2 rounded\">\r\n//               <h3 className=\"text-center font-bold mb-2\">Order progress</h3>\r\n//               <div className=\"flex justify-between\">\r\n//                 <div className=\"flex flex-col items-center\">\r\n//                   <div className=\"w-6 h-6 rounded-full bg-yellow-400 mb-1\"></div>\r\n//                   <span className=\"text-xs\">Processing</span>\r\n//                 </div>\r\n//                 <div className=\"flex flex-col items-center\">\r\n//                   <div className=\"w-6 h-6 rounded-full bg-blue-400 mb-1\"></div>\r\n//                   <span className=\"text-xs\">Shipped</span>\r\n//                 </div>\r\n//                 <div className=\"flex flex-col items-center\">\r\n//                   <div className=\"w-6 h-6 rounded-full bg-green-400 mb-1\"></div>\r\n//                   <span className=\"text-xs\">Delivery</span>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//             {openOrderId === order.id && (\r\n//               <div className=\"mt-4 bg-white p-4 rounded-lg shadow\">\r\n//                 <button onClick={() => handleOrderClick(order)} className=\"bg-blue-500 text-white px-4 py-2 rounded mb-4 w-full text-left flex justify-between items-center\">\r\n//                   {openOrderId === order.id ? 'Hide Details' : 'Show Details'}\r\n//                   <span className=\"text-xs\">{openOrderId === order.id ? '▲' : '▼'}</span>\r\n//                 </button>\r\n//                 <div>\r\n//                   <h2 className=\"text-xl font-bold mb-2\">Order Details</h2>\r\n//                   <ul>\r\n//                     {order.items.map((item, index) => (\r\n//                       <li key={index} className=\"mb-2\">\r\n//                         <div className=\"flex items-center\">\r\n//                           <img src=\"/api/placeholder/50/50\" alt={item.name} className=\"w-12 h-12 rounded-full mr-2\" />\r\n//                           <div>\r\n//                             <p className=\"font-bold\">{item.name}</p>\r\n//                             <p>No of plates: {item.plates}</p>\r\n//                             <p>Price per {item.pricePerUnit ? 'unit' : 'kg'}: ₹{item.pricePerUnit || item.pricePerKg}</p>\r\n//                             <p>Quantity: {item.quantity} {item.pricePerUnit ? 'units' : 'kgs'}</p>\r\n//                             <p>Amount: ₹{item.amount}</p>\r\n//                           </div>\r\n//                         </div>\r\n//                       </li>\r\n//                     ))}\r\n//                   </ul>\r\n//                 </div>\r\n//               </div>\r\n//             )}\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default OrderDashboard;\r\n"],"mappings":"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;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACjC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA,eACN,CAAC;AAEP,CAAC;AAAC5B,EAAA,CAzIID,WAAW;EAAA,QAMEL,WAAW;AAAA;AAAAqD,EAAA,GANxBhD,WAAW;AA2IjB,eAAeA,WAAW;;AAyB1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAQA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}