{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Karishma\\\\Desktop\\\\compswipe\\\\compswipe\\\\client\\\\my-app\\\\src\\\\MenuItem.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { ChevronDown, ChevronUp, Plus, Minus, ShoppingCart, X } from 'lucide-react';\nimport { useLocation } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\n// ToggleSwitch Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToggleSwitch = ({\n  isOn,\n  onToggle\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: `w-8 h-4 flex items-center rounded-full p-1 cursor-pointer ${isOn ? `bg-green-500` : `bg-gray-300`}`,\n  onClick: onToggle,\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `bg-white w-3 h-3 rounded-full shadow-md transform duration-300 ease-in-out ${isOn ? 'translate-x-4' : 'translate-x-0'}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 3\n}, this);\n\n// MenuItem Component\n_c = ToggleSwitch;\nconst MenuItem = ({\n  item,\n  checked,\n  unit,\n  onToggleUnit,\n  onCheck,\n  mainToggleOn\n}) => {\n  const shouldDisplayToggle = item.isdual === 'TRUE';\n  console.log(\"items\", item);\n  console.log(item['productname']);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-between p-2 border-b border-gray-200\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center flex-grow\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: item.image,\n        alt: item['productname'],\n        className: \"w-16 h-16 object-cover rounded mr-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold text-gray-800\",\n          children: item['productname']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: checked,\n          onChange: onCheck,\n          className: \"ml-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `flex items-center ${mainToggleOn ? 'justify-end' : 'justify-start'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm text-gray-600 mr-2\",\n        children: unit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), shouldDisplayToggle && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: /*#__PURE__*/_jsxDEV(ToggleSwitch, {\n          isOn: unit === item['Units'],\n          onToggle: onToggleUnit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n// MenuCategory Component\n_c2 = MenuItem;\nconst MenuCategory = ({\n  category,\n  items,\n  checkedItems,\n  units,\n  onToggleUnit,\n  onCheck,\n  mainToggleOn\n}) => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-4 bg-white rounded-lg shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"w-full flex items-center justify-between p-4 text-left\",\n      onClick: () => setIsOpen(!isOpen),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-lg font-semibold text-gray-800\",\n        children: category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), isOpen ? /*#__PURE__*/_jsxDEV(ChevronUp, {\n        size: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(ChevronDown, {\n        size: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 45\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: items.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n        item: item,\n        checked: checkedItems[item['productid']] || false,\n        unit: units[item['productid']] || item['Units'],\n        onToggleUnit: () => onToggleUnit(item['productid']),\n        onCheck: () => onCheck(item['productid']),\n        mainToggleOn: mainToggleOn\n      }, item['productid'], false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n// CartSidebar Component\n_s(MenuCategory, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c3 = MenuCategory;\nconst CartSidebar = ({\n  isOpen,\n  onClose,\n  cartItems,\n  numberOfPlates,\n  onUpdateQuantity,\n  onToggleUnit\n}) => {\n  _s2();\n  // const navigate = useNavigate();\n  const categoriesWithoutToggle = ['BREAKFAST ITEMS', 'WELCOME DRINKS'];\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [redirectUrl, setRedirectUrl] = useState('');\n\n  // Handle input value change\n  // Allow free input without restrictions\n  const handleInputChange = (itemId, value) => {\n    // Allow empty string input but don't update the quantity just yet\n    const newQuantity = value === '' ? '' : Number(value);\n    onUpdateQuantity(itemId, newQuantity); // Update the quantity in state\n  };\n\n  // Reset to minimum if the input is invalid or empty on blur\n  const handleBlur = (itemId, quantity, minUnitsPerPlate) => {\n    // Reset to the minimum allowed quantity if the input is empty or less than the min\n    const newQuantity = quantity < minUnitsPerPlate ? minUnitsPerPlate : quantity;\n    onUpdateQuantity(itemId, newQuantity); // Update the quantity to the correct value\n  };\n\n  // Calculate the total item cost\n  function calculateTotalItemCost(item, numberOfPlates, selectedUnit, enteredValue) {\n    let totalItemCost = 0;\n    if (selectedUnit === item['units']) {\n      const priceperunit = item['priceperunit'];\n      console.log(\"hi\", priceperunit);\n      totalItemCost = numberOfPlates * priceperunit * item.quantity;\n      // console.log(\"idly\", totalItemCost);  \n    }\n    if (item['price_category'] === 'kg' || item['price_category'] === 'lt') {\n      totalItemCost = enteredValue * item['priceperunit'];\n      console.log(\"kg\", totalItemCost);\n    } else if (selectedUnit === item['units2']) {\n      const costPerSmallerUnit = item['priceperunit_1'] / item['MinUnitsperPlate_1'];\n      totalItemCost = costPerSmallerUnit * enteredValue * numberOfPlates;\n    } else if (selectedUnit === item['Units']) {\n      const priceperunit = item['priceperunit'];\n      console.log(\"hi\", priceperunit);\n      totalItemCost = numberOfPlates * priceperunit * item.quantity;\n      console.log(\"idly\", totalItemCost);\n    }\n    return totalItemCost.toFixed(2);\n  }\n\n  // Calculate total amount\n  const totalAmount = cartItems.reduce((sum, item) => {\n    const selectedUnit = item.unit; // Use the unit from the cart item\n    const totalItemCost = calculateTotalItemCost(item, numberOfPlates, selectedUnit, item.quantity);\n    return sum + parseFloat(totalItemCost);\n  }, 0).toFixed(2);\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    console.log(\"paynowpage\");\n    try {\n      const response = await axios.post('http://localhost:5000/pay', {\n        amount: totalAmount\n      });\n      if (response.data && response.data.redirectUrl) {\n        setRedirectUrl(response.data.redirectUrl);\n        window.location.href = response.data.redirectUrl;\n      } else {\n        setError('Unexpected response format.');\n      }\n    } catch (err) {\n      setError(`err.response ? Error: ${err.response.data.message || 'An error occurred. Please try again.'} : 'Network error or no response from the server.'`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `fixed right-0 top-0 h-full w-80 bg-white shadow-lg transform transition-transform duration-300 ease-in-out ${isOpen ? 'translate-x-0' : 'translate-x-full'}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 flex flex-col h-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold text-gray-800\",\n          children: \"Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"text-gray-600 hover:text-gray-800\",\n          children: /*#__PURE__*/_jsxDEV(X, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-y-auto flex-grow\",\n        children: cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-center h-full text-gray-600 text-lg\",\n          children: \"Your cart is empty. Fill the cart to proceed.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this) : cartItems.map(item => {\n          const minUnitsPerPlate = item['minunitsperplate'] || 1;\n          const displaypriceperunit = item.unit === item['units'] ? item['priceperunit'] : item.unit === item['units2'] ? item['priceperunit'] / item['minunitsperplate'] : item['priceperunit'];\n          const totalItemCost = calculateTotalItemCost(item, numberOfPlates, item.unit, item.quantity);\n          const isPcs = item['Units'] === 'pcs';\n          const isKgOrLt = item['price_category'] === 'kg' || item['price_category'] === 'lt';\n          const isSmallerUnit = item['Units_1'] === 'gms' || item['Units_1'] === 'ml';\n          console.log('isSmallerUnit:', isSmallerUnit);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col mb-4 border-b border-gray-200 pb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col items-center mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"font-semibold text-gray-800 mb-1\",\n                children: item['productname']\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: item.image,\n                alt: item['productname'],\n                className: \"w-24 h-24 object-cover rounded mb-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-600 mb-2 flex flex-col items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium text-gray-800\",\n                  children: \"Item Cost:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-700 mt-1\",\n                  children: [isPcs ? ` ${item.quantity}* ${item['priceperunit']} * ${numberOfPlates} = ` : isKgOrLt ? `${displaypriceperunit} * ${item.quantity} = ` : isSmallerUnit ? `${displaypriceperunit} * ${item.quantity} * ${numberOfPlates} = ` : `${displaypriceperunit} * ${item.quantity} = `, /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-gray-800 font-semibold\",\n                    children: [\"$\", totalItemCost]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 19\n            }, this), !categoriesWithoutToggle.includes(item.category_name) && item.isdual === 'TRUE' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(ToggleSwitch, {\n                isOn: item.unit === item['units'],\n                onToggle: () => onToggleUnit(item['productid'])\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm text-gray-600\",\n                children: item.unit\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-center mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => onUpdateQuantity(item['productid'], Math.max(item.quantity - 1, 1)),\n                className: \"p-1 bg-green-500 text-white rounded-l\",\n                children: /*#__PURE__*/_jsxDEV(Minus, {\n                  size: 14\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 5\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 3\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: item.quantity,\n                onChange: e => handleInputChange(item['productid'], e.target.value, minUnitsPerPlate),\n                onBlur: () => handleBlur(item['productid'], item.quantity, minUnitsPerPlate),\n                className: \"w-12 text-center px-2 py-1 border\",\n                min: \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 3\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => onUpdateQuantity(item['productid'], item.quantity + 1),\n                className: \"p-1 bg-green-500 text-white rounded-r\",\n                children: /*#__PURE__*/_jsxDEV(Plus, {\n                  size: 14\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 5\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 3\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 1\n            }, this)]\n          }, item['productid'], true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), cartItems.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col justify-end mt-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 text-xl font-bold text-gray-800 mb-2\",\n          children: [\"Total Amount: $\", totalAmount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          className: \"mt-4 py-2 px-4 bg-yellow-500 text-gray-800 font-bold rounded\",\n          children: \"Pay Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n};\n\n// Menu Component\n_s2(CartSidebar, \"njOFkRYmUIntZutm2Thn/VJnSo4=\");\n_c4 = CartSidebar;\nconst Menu = () => {\n  _s3();\n  var _location$state;\n  const [menuData, setMenuData] = useState([]);\n  const [checkedItems, setCheckedItems] = useState({});\n  const [quantities, setQuantities] = useState({});\n  const [units, setUnits] = useState({});\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const [mainToggleOn, setMainToggleOn] = useState(false); // Main toggle state\n  const location = useLocation();\n  const [mydata, setMydata] = useState({});\n  const numberOfPlates = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.numberOfPlates) || 1; // Retrieve the number of plates from location state\n  // const navigate = useNavigate(); \n\n  // useEffect(() => {\n  //   fetch('/priceList.json')\n  //     .then(response => response.json())\n  //     .then(data => {\n  //       const transformedData = data.reduce((acc, item) => {\n  //         const category = item['Category_Name'];\n  //         if (!acc[category]) {\n  //           acc[category] = { category, items: [] };\n  //         }\n  //         acc[category].items.push(item);\n  //         return acc;\n  //       }, {});\n\n  //       setMenuData(Object.values(transformedData));\n\n  //       const initialUnits = {};\n  //       data.forEach(item => {\n  //         initialUnits[item['productid']] = item['Units'];\n  //       });\n  //       setUnits(initialUnits);\n  //     })\n  //     .catch(error => console.error('Error fetching data:', error));\n  // }, []);\n\n  // Fetch products and transform the data into categories\n  // useEffect(() => {\n  //   const fetchProducts = async () => {\n  //     try {\n  //       const response = await fetch('http://localhost:5000/api/products');\n  //       console.log(\"res\",response);\n  //       const data = response.rows;\n  //       console.log(\"data\",data);\n\n  //       // Transform the data into categories\n  //       const transformedData = data.reduce((acc, item) => {\n  //         const category = item['Breakfast'];\n  //         if (!acc[category]) {\n  //           acc[category] = { category, items: [] };\n  //         }\n  //         acc[category].items.push(item);\n  //         return acc;\n  //       }, {});\n\n  //       setMenuData(Object.values(transformedData));\n\n  //       const initialUnits = {};\n  //       data.forEach(item => {\n  //         initialUnits[item['productid']] = item['Units'];\n  //       });\n  //       setUnits(initialUnits);\n  //     } catch (error) {\n  //       console.error('Error fetching data:', error);\n  //     }\n  //   };\n\n  //   fetchProducts();\n  // }, []);\n\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/products');\n        console.log(\"res\", response);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        // setMydata[data]\n\n        // Access the rows property\n\n        console.log(\"data\", data);\n\n        // Transform the data into categories\n        const transformedData = data.reduce((acc, item) => {\n          const category = item['category_name']; // Use the correct field for category\n          if (!acc[category]) {\n            acc[category] = {\n              category,\n              items: []\n            };\n          }\n          acc[category].items.push(item);\n          console.log(\"acc\", acc);\n          return acc;\n        }, {});\n        setMenuData(Object.values(transformedData)); // Update state with transformed categories\n\n        // Set initial uniconsolets for each product\n\n        const initialUnits = {};\n        data.forEach(item => {\n          initialUnits[item['productid']] = item['Units']; // Use the correct field for units\n        });\n        setUnits(initialUnits); // Update state with initial units\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchProducts();\n  }, []);\n\n  // Update item toggles based on the main toggle state\n  useEffect(() => {\n    setUnits(prevUnits => {\n      const updatedUnits = {};\n      menuData.flatMap(category => category.items).forEach(item => {\n        if (item.isdual === 'TRUE') {\n          updatedUnits[item['productid']] = mainToggleOn ? item['units'] : item['units2'];\n        }\n      });\n      return updatedUnits;\n    });\n  }, [mainToggleOn, menuData]);\n  const updateQuantity = (itemId, newQuantity) => {\n    setQuantities(prev => ({\n      ...prev,\n      [itemId]: newQuantity\n    }));\n  };\n  const toggleUnit = itemId => {\n    const item = menuData.flatMap(category => category.items).find(item => item['productid'] === itemId);\n    if (item && item.isdual === 'TRUE') {\n      setUnits(prev => ({\n        ...prev,\n        [itemId]: prev[itemId] === item['units'] ? item['units2'] : item['units']\n      }));\n    }\n  };\n  const handleCheck = itemId => {\n    const newCheckedItems = {\n      ...checkedItems,\n      [itemId]: !checkedItems[itemId]\n    };\n    setCheckedItems(newCheckedItems);\n    if (!checkedItems[itemId]) {\n      setQuantities(prev => ({\n        ...prev,\n        [itemId]: 1\n      }));\n    } else {\n      setQuantities(prev => ({\n        ...prev,\n        [itemId]: 0\n      }));\n    }\n  };\n  const totalQuantity = Object.values(quantities).reduce((sum, q) => sum + q, 0);\n  const cartItems = menuData.flatMap(category => category.items.filter(item => quantities[item['productid']] > 0).map(item => ({\n    ...item,\n    quantity: quantities[item['productid']],\n    unit: units[item['productid']] || item['Units'],\n    price: units[item['productid']] === item['Units'] ? item['priceperunit'] : item['priceperunits2'],\n    category: category.category\n  })));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gradient-to-b from-[#008000]\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gradient-to-b from-[#008000] to-[#70c656]\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center bg-gradient-to-b from-[#008000] to-[#70c656] py-4 px-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold text-white\",\n          children: \"Menu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsCartOpen(true),\n          className: \"relative bg-green-500 text-white p-2 rounded\",\n          children: [/*#__PURE__*/_jsxDEV(ShoppingCart, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 13\n          }, this), totalQuantity > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"absolute top-0 right-0 bg-red-500 text-white rounded-full px-2 text-xs\",\n            children: totalQuantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center py-2\",\n        children: /*#__PURE__*/_jsxDEV(ToggleSwitch, {\n          isOn: mainToggleOn,\n          onToggle: () => setMainToggleOn(prev => !prev)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6\",\n      children: menuData.map(category => /*#__PURE__*/_jsxDEV(MenuCategory, {\n        category: category.category,\n        items: category.items,\n        checkedItems: checkedItems,\n        units: units,\n        onToggleUnit: toggleUnit,\n        onCheck: handleCheck,\n        mainToggleOn: mainToggleOn // Passing the main toggle state\n      }, category.category, false, {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 14\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CartSidebar, {\n      isOpen: isCartOpen,\n      onClose: () => setIsCartOpen(false),\n      cartItems: cartItems,\n      numberOfPlates: numberOfPlates // Number of plates from location state\n      ,\n      onUpdateQuantity: updateQuantity,\n      onToggleUnit: toggleUnit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 468,\n    columnNumber: 5\n  }, this);\n};\n_s3(Menu, \"2CIqUt+51TH0TmOOj+kuoy9gd7U=\", false, function () {\n  return [useLocation];\n});\n_c5 = Menu;\nexport default Menu;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"ToggleSwitch\");\n$RefreshReg$(_c2, \"MenuItem\");\n$RefreshReg$(_c3, \"MenuCategory\");\n$RefreshReg$(_c4, \"CartSidebar\");\n$RefreshReg$(_c5, \"Menu\");","map":{"version":3,"names":["React","useEffect","useState","ChevronDown","ChevronUp","Plus","Minus","ShoppingCart","X","useLocation","useNavigate","axios","jsxDEV","_jsxDEV","ToggleSwitch","isOn","onToggle","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","MenuItem","item","checked","unit","onToggleUnit","onCheck","mainToggleOn","shouldDisplayToggle","isdual","console","log","src","image","alt","type","onChange","_c2","MenuCategory","category","items","checkedItems","units","_s","isOpen","setIsOpen","size","map","_c3","CartSidebar","onClose","cartItems","numberOfPlates","onUpdateQuantity","_s2","categoriesWithoutToggle","loading","setLoading","error","setError","redirectUrl","setRedirectUrl","handleInputChange","itemId","value","newQuantity","Number","handleBlur","quantity","minUnitsPerPlate","calculateTotalItemCost","selectedUnit","enteredValue","totalItemCost","priceperunit","costPerSmallerUnit","toFixed","totalAmount","reduce","sum","parseFloat","handleSubmit","e","preventDefault","response","post","amount","data","window","location","href","err","message","length","displaypriceperunit","isPcs","isKgOrLt","isSmallerUnit","includes","category_name","Math","max","target","onBlur","min","_c4","Menu","_s3","_location$state","menuData","setMenuData","setCheckedItems","quantities","setQuantities","setUnits","isCartOpen","setIsCartOpen","setMainToggleOn","mydata","setMydata","state","fetchProducts","fetch","ok","Error","status","json","transformedData","acc","push","Object","values","initialUnits","forEach","prevUnits","updatedUnits","flatMap","updateQuantity","prev","toggleUnit","find","handleCheck","newCheckedItems","totalQuantity","q","filter","price","_c5","$RefreshReg$"],"sources":["C:/Users/Karishma/Desktop/compswipe/compswipe/client/my-app/src/MenuItem.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { ChevronDown, ChevronUp, Plus, Minus, ShoppingCart, X } from 'lucide-react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n// ToggleSwitch Component\r\nconst ToggleSwitch = ({ isOn, onToggle }) => (\r\n  <div\r\n    className={`w-8 h-4 flex items-center rounded-full p-1 cursor-pointer ${isOn ? `bg-green-500` : `bg-gray-300`}`}\r\n    onClick={onToggle}\r\n  >\r\n    <div\r\n      className={`bg-white w-3 h-3 rounded-full shadow-md transform duration-300 ease-in-out ${isOn ? 'translate-x-4' : 'translate-x-0'}`}\r\n    ></div>\r\n  </div>\r\n);\r\n\r\n// MenuItem Component\r\nconst MenuItem = ({ item, checked, unit, onToggleUnit, onCheck, mainToggleOn }) => {\r\n  const shouldDisplayToggle = item.isdual === 'TRUE';\r\n  console.log(\"items\",item);\r\n  console.log(item['productname'])\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-between p-2 border-b border-gray-200\">\r\n      <div className=\"flex items-center flex-grow\">\r\n        <img src={item.image} alt={item['productname']} className=\"w-16 h-16 object-cover rounded mr-4\" />\r\n        <div className=\"flex items-center justify-between\">\r\n          <h3 className=\"font-semibold text-gray-800\">{item['productname']}</h3>\r\n\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={checked}\r\n            onChange={onCheck}\r\n            className=\"ml-2\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className={`flex items-center ${mainToggleOn ? 'justify-end' : 'justify-start'}`}>\r\n        {/* Display the corresponding unit text above the toggle */}\r\n        <div className=\"text-sm text-gray-600 mr-2\">\r\n          {unit}\r\n        </div>\r\n        {shouldDisplayToggle && (\r\n          <div className=\"flex items-center\">\r\n            <ToggleSwitch\r\n              isOn={unit === item['Units']}\r\n              onToggle={onToggleUnit}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// MenuCategory Component\r\nconst MenuCategory = ({ category, items, checkedItems, units, onToggleUnit, onCheck, mainToggleOn }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  return (\r\n    <div className=\"mb-4 bg-white rounded-lg shadow\">\r\n      <button\r\n        className=\"w-full flex items-center justify-between p-4 text-left\"\r\n        onClick={() => setIsOpen(!isOpen)}\r\n      >\r\n        <span className=\"text-lg font-semibold text-gray-800\">{category}</span>\r\n        {isOpen ? <ChevronUp size={20} /> : <ChevronDown size={20} />}\r\n      </button>\r\n      {isOpen && (\r\n        <div>\r\n          {items.map(item => (\r\n            <MenuItem\r\n              key={item['productid']}\r\n              item={item}\r\n              checked={checkedItems[item['productid']] || false}\r\n              unit={units[item['productid']] || item['Units']}\r\n              onToggleUnit={() => onToggleUnit(item['productid'])}\r\n              onCheck={() => onCheck(item['productid'])}\r\n              mainToggleOn={mainToggleOn}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n// CartSidebar Component\r\nconst CartSidebar = ({ isOpen, onClose, cartItems, numberOfPlates, onUpdateQuantity, onToggleUnit }) => {\r\n  // const navigate = useNavigate();\r\n  const categoriesWithoutToggle = ['BREAKFAST ITEMS', 'WELCOME DRINKS'];\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [redirectUrl, setRedirectUrl] = useState('');\r\n\r\n  // Handle input value change\r\n// Allow free input without restrictions\r\nconst handleInputChange = (itemId, value) => {\r\n  // Allow empty string input but don't update the quantity just yet\r\n  const newQuantity = value === '' ? '' : Number(value); \r\n  onUpdateQuantity(itemId, newQuantity); // Update the quantity in state\r\n};\r\n\r\n// Reset to minimum if the input is invalid or empty on blur\r\nconst handleBlur = (itemId, quantity, minUnitsPerPlate) => {\r\n  // Reset to the minimum allowed quantity if the input is empty or less than the min\r\n  const newQuantity = quantity < minUnitsPerPlate ? minUnitsPerPlate : quantity;\r\n  onUpdateQuantity(itemId, newQuantity); // Update the quantity to the correct value\r\n};\r\n\r\n\r\n  // Calculate the total item cost\r\n  function calculateTotalItemCost(item, numberOfPlates, selectedUnit, enteredValue) {\r\n    let totalItemCost = 0;\r\n    \r\n    if (selectedUnit === item['units']) {\r\n      const priceperunit = item['priceperunit'];\r\n      console.log(\"hi\", priceperunit);\r\n      totalItemCost = numberOfPlates * priceperunit * item.quantity;\r\n      // console.log(\"idly\", totalItemCost);  \r\n  } \r\n  if (item['price_category'] === 'kg' || item['price_category'] === 'lt') {\r\n    totalItemCost = enteredValue * item['priceperunit'];\r\n    console.log(\"kg\",totalItemCost);\r\n  }\r\n\r\n    else if (selectedUnit === item['units2']) {\r\n      const costPerSmallerUnit = item['priceperunit_1'] / item['MinUnitsperPlate_1'];\r\n      totalItemCost = costPerSmallerUnit * enteredValue * numberOfPlates;\r\n\r\n    } else  if (selectedUnit === item['Units']) {\r\n      const priceperunit = item['priceperunit'];\r\n      console.log(\"hi\", priceperunit);\r\n      totalItemCost = numberOfPlates * priceperunit * item.quantity;\r\n      console.log(\"idly\", totalItemCost);  \r\n  } \r\n\r\n    return totalItemCost.toFixed(2);\r\n  }\r\n\r\n  // Calculate total amount\r\n  const totalAmount = cartItems.reduce((sum, item) => {\r\n    const selectedUnit = item.unit; // Use the unit from the cart item\r\n    const totalItemCost = calculateTotalItemCost(item, numberOfPlates, selectedUnit, item.quantity);\r\n    return sum + parseFloat(totalItemCost);\r\n  }, 0).toFixed(2);\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError('');\r\n    console.log(\"paynowpage\");\r\n\r\n\r\n   \r\n    \r\n    try {\r\n      const response = await axios.post('http://localhost:5000/pay', {\r\n        amount: totalAmount\r\n      });\r\n      \r\n      if (response.data && response.data.redirectUrl) {\r\n        setRedirectUrl(response.data.redirectUrl);\r\n        window.location.href = response.data.redirectUrl;\r\n      } else {\r\n        setError('Unexpected response format.');\r\n      }\r\n    } catch (err) {\r\n      setError(`err.response ? Error: ${err.response.data.message || 'An error occurred. Please try again.'} : 'Network error or no response from the server.'`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={`fixed right-0 top-0 h-full w-80 bg-white shadow-lg transform transition-transform duration-300 ease-in-out ${isOpen ? 'translate-x-0' : 'translate-x-full'}`}>\r\n      <div className=\"p-4 flex flex-col h-full\">\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n          <h2 className=\"text-xl font-bold text-gray-800\">Cart</h2>\r\n          <button onClick={onClose} className=\"text-gray-600 hover:text-gray-800\">\r\n            <X size={24} />\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"overflow-y-auto flex-grow\">\r\n          {cartItems.length === 0 ? (\r\n            <div className=\"flex items-center justify-center h-full text-gray-600 text-lg\">\r\n              Your cart is empty. Fill the cart to proceed.\r\n            </div>\r\n          ) : (\r\n            cartItems.map(item => {\r\n              const minUnitsPerPlate = item['minunitsperplate'] || 1;\r\n              const displaypriceperunit = item.unit === item['units'] \r\n               ? item['priceperunit'] \r\n               : (item.unit === item['units2'] \r\n               ? item['priceperunit'] / item['minunitsperplate'] \r\n               : item['priceperunit']);\r\n              const totalItemCost = calculateTotalItemCost(item, numberOfPlates, item.unit, item.quantity);\r\n              const isPcs = item['Units'] === 'pcs';\r\n              const isKgOrLt = item['price_category'] === 'kg' || item['price_category'] === 'lt';\r\n              const isSmallerUnit = item['Units_1'] === 'gms' || item['Units_1'] === 'ml';\r\n             \r\n              console.log('isSmallerUnit:', isSmallerUnit);\r\n\r\n              return (\r\n                <div key={item['productid']} className=\"flex flex-col mb-4 border-b border-gray-200 pb-4\">\r\n                  <div className=\"flex flex-col items-center mb-2\">\r\n                    <h3 className=\"font-semibold text-gray-800 mb-1\">{item['productname']}</h3>\r\n                    <img src={item.image} alt={item['productname']} className=\"w-24 h-24 object-cover rounded mb-2\" />\r\n                    <p className=\"text-sm text-gray-600 mb-2 flex flex-col items-center\">\r\n                      <span className=\"font-medium text-gray-800\">Item Cost:</span>\r\n                      <span className=\"text-gray-700 mt-1\">\r\n                        {isPcs\r\n                         ? ` ${item.quantity}* ${item['priceperunit']} * ${numberOfPlates} = `\r\n                        :isKgOrLt\r\n                          ? `${displaypriceperunit} * ${item.quantity} = `\r\n                          : isSmallerUnit\r\n                            ? `${displaypriceperunit} * ${item.quantity} * ${numberOfPlates} = `\r\n                            : `${displaypriceperunit} * ${item.quantity} = `\r\n                        }\r\n                        <span className=\"text-gray-800 font-semibold\">${totalItemCost}</span>\r\n                      </span>\r\n                    </p>\r\n                  </div>\r\n\r\n                  {!categoriesWithoutToggle.includes(item.category_name) && item.isdual === 'TRUE' && (\r\n                    <div className=\"flex items-center mb-2\">\r\n                      <ToggleSwitch \r\n                        isOn={item.unit === item['units']}\r\n                        onToggle={() => onToggleUnit(item['productid'])}\r\n                      />\r\n                      <span className=\"text-sm text-gray-600\">{item.unit}</span>\r\n                    </div>\r\n                  )}\r\n\r\n<div className=\"flex items-center justify-center mb-2\">\r\n  <button \r\n    onClick={() => onUpdateQuantity(item['productid'], Math.max(item.quantity - 1, 1))} \r\n    className=\"p-1 bg-green-500 text-white rounded-l\"\r\n  >\r\n    <Minus size={14} />\r\n  </button>\r\n  \r\n  <input \r\n    type=\"number\" \r\n    value={item.quantity} \r\n    onChange={(e) => handleInputChange(item['productid'], e.target.value, minUnitsPerPlate)} \r\n    onBlur={() => handleBlur(item['productid'], item.quantity, minUnitsPerPlate)} \r\n    className=\"w-12 text-center px-2 py-1 border\"\r\n    min=\"0\"\r\n  />\r\n  \r\n  <button \r\n    onClick={() => onUpdateQuantity(item['productid'], item.quantity + 1)} \r\n    className=\"p-1 bg-green-500 text-white rounded-r\"\r\n  >\r\n    <Plus size={14} />\r\n  </button>\r\n</div>\r\n\r\n                </div>\r\n              );\r\n            })\r\n          )}\r\n        </div>\r\n\r\n        {cartItems.length > 0 && (\r\n          <div className=\"flex flex-col justify-end mt-auto\">\r\n            <div className=\"mt-4 text-xl font-bold text-gray-800 mb-2\">\r\n              Total Amount: ${totalAmount}\r\n            </div>\r\n\r\n           <button onClick={handleSubmit} className=\"mt-4 py-2 px-4 bg-yellow-500 text-gray-800 font-bold rounded\">\r\n              Pay Now\r\n            </button>\r\n\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n// Menu Component\r\nconst Menu = () => {\r\n  const [menuData, setMenuData] = useState([]);\r\n  const [checkedItems, setCheckedItems] = useState({});\r\n  const [quantities, setQuantities] = useState({});\r\n  const [units, setUnits] = useState({});\r\n  const [isCartOpen, setIsCartOpen] = useState(false);\r\n  const [mainToggleOn, setMainToggleOn] = useState(false); // Main toggle state\r\n  const location = useLocation();\r\n  const[mydata,setMydata]=useState({})\r\n  const numberOfPlates = location.state?.numberOfPlates || 1; // Retrieve the number of plates from location state\r\n  // const navigate = useNavigate(); \r\n  \r\n  // useEffect(() => {\r\n  //   fetch('/priceList.json')\r\n  //     .then(response => response.json())\r\n  //     .then(data => {\r\n  //       const transformedData = data.reduce((acc, item) => {\r\n  //         const category = item['Category_Name'];\r\n  //         if (!acc[category]) {\r\n  //           acc[category] = { category, items: [] };\r\n  //         }\r\n  //         acc[category].items.push(item);\r\n  //         return acc;\r\n  //       }, {});\r\n\r\n  //       setMenuData(Object.values(transformedData));\r\n\r\n  //       const initialUnits = {};\r\n  //       data.forEach(item => {\r\n  //         initialUnits[item['productid']] = item['Units'];\r\n  //       });\r\n  //       setUnits(initialUnits);\r\n  //     })\r\n  //     .catch(error => console.error('Error fetching data:', error));\r\n  // }, []);\r\n\r\n  // Fetch products and transform the data into categories\r\n  // useEffect(() => {\r\n  //   const fetchProducts = async () => {\r\n  //     try {\r\n  //       const response = await fetch('http://localhost:5000/api/products');\r\n  //       console.log(\"res\",response);\r\n  //       const data = response.rows;\r\n  //       console.log(\"data\",data);\r\n\r\n  //       // Transform the data into categories\r\n  //       const transformedData = data.reduce((acc, item) => {\r\n  //         const category = item['Breakfast'];\r\n  //         if (!acc[category]) {\r\n  //           acc[category] = { category, items: [] };\r\n  //         }\r\n  //         acc[category].items.push(item);\r\n  //         return acc;\r\n  //       }, {});\r\n\r\n  //       setMenuData(Object.values(transformedData));\r\n\r\n  //       const initialUnits = {};\r\n  //       data.forEach(item => {\r\n  //         initialUnits[item['productid']] = item['Units'];\r\n  //       });\r\n  //       setUnits(initialUnits);\r\n  //     } catch (error) {\r\n  //       console.error('Error fetching data:', error);\r\n  //     }\r\n  //   };\r\n\r\n  //   fetchProducts();\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/products');\r\n        console.log(\"res\", response);\r\n        \r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        \r\n        const data = await response.json(); \r\n        // setMydata[data]\r\n        \r\n        \r\n        // Access the rows property\r\n        \r\n        console.log(\"data\", data);\r\n  \r\n        // Transform the data into categories\r\n        const transformedData = data.reduce((acc, item) => {\r\n          const category = item['category_name']; // Use the correct field for category\r\n          if (!acc[category]) {\r\n            acc[category] = { category, items: [] };\r\n          }\r\n          acc[category].items.push(item);\r\n          console.log(\"acc\",acc)\r\n          return acc;\r\n        }, {});\r\n  \r\n        setMenuData(Object.values(transformedData)); // Update state with transformed categories\r\n  \r\n        // Set initial uniconsolets for each product\r\n        \r\n        const initialUnits = {};\r\n        data.forEach(item => {\r\n          initialUnits[item['productid']] = item['Units']; // Use the correct field for units\r\n        });\r\n        setUnits(initialUnits); // Update state with initial units\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n  \r\n    fetchProducts();\r\n  }, []);\r\n  \r\n\r\n  // Update item toggles based on the main toggle state\r\n  useEffect(() => {\r\n    setUnits(prevUnits => {\r\n      const updatedUnits = {};\r\n      menuData.flatMap(category => category.items).forEach(item => {\r\n        if (item.isdual === 'TRUE') {\r\n          updatedUnits[item['productid']] = mainToggleOn ?  item['units']:item['units2'];\r\n        }\r\n      });\r\n      return updatedUnits;\r\n    });\r\n  }, [mainToggleOn, menuData]);\r\n\r\n  const updateQuantity = (itemId, newQuantity) => {\r\n    setQuantities(prev => ({ ...prev, [itemId]: newQuantity }));\r\n  };\r\n\r\n  const toggleUnit = (itemId) => {\r\n    const item = menuData\r\n      .flatMap(category => category.items)\r\n      .find(item => item['productid'] === itemId);\r\n\r\n    if (item && item.isdual === 'TRUE') {\r\n      setUnits(prev => ({\r\n        ...prev,\r\n        [itemId]: prev[itemId] === item['units'] ? item['units2'] : item['units']\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleCheck = (itemId) => {\r\n    const newCheckedItems = { ...checkedItems, [itemId]: !checkedItems[itemId] };\r\n    setCheckedItems(newCheckedItems);\r\n    if (!checkedItems[itemId]) {\r\n      setQuantities(prev => ({ ...prev, [itemId]: 1 }));\r\n    } else {\r\n      setQuantities(prev => ({ ...prev, [itemId]: 0 }));\r\n    }\r\n  };\r\n\r\n\r\n  const totalQuantity = Object.values(quantities).reduce((sum, q) => sum + q, 0);\r\n\r\n  const cartItems = menuData.flatMap(category =>\r\n    category.items\r\n      .filter(item => quantities[item['productid']] > 0)\r\n      .map(item => ({\r\n        ...item,\r\n        quantity: quantities[item['productid']],\r\n        unit: units[item['productid']] || item['Units'], \r\n        price: units[item['productid']] === item['Units'] \r\n                ? item['priceperunit'] \r\n                : item['priceperunits2'],\r\n        category: category.category\r\n      }))\r\n  );\r\n\r\n  return (\r\n    <div className=\"bg-gradient-to-b from-[#008000]\">\r\n      <div className=\"bg-gradient-to-b from-[#008000] to-[#70c656]\">\r\n        <div className=\"flex justify-between items-center bg-gradient-to-b from-[#008000] to-[#70c656] py-4 px-6\">\r\n          <h1 className=\"text-2xl font-bold text-white\">Menu</h1>\r\n          <button\r\n            onClick={() => setIsCartOpen(true)}\r\n            className=\"relative bg-green-500 text-white p-2 rounded\"\r\n          >\r\n            <ShoppingCart size={24} />\r\n            {totalQuantity > 0 && (\r\n              <span className=\"absolute top-0 right-0 bg-red-500 text-white rounded-full px-2 text-xs\">\r\n                {totalQuantity}\r\n              </span>\r\n            )}\r\n          </button>\r\n        </div>\r\n        {/* Main Toggle Switch */}\r\n        <div className=\"flex justify-center py-2\">\r\n          <ToggleSwitch\r\n            isOn={mainToggleOn}\r\n            onToggle={() => setMainToggleOn(prev => !prev)}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"p-6\">\r\n        {menuData.map(category => (\r\n             <MenuCategory\r\n             key={category.category}\r\n             category={category.category}\r\n             items={category.items}\r\n             checkedItems={checkedItems}\r\n             units={units}\r\n             onToggleUnit={toggleUnit}\r\n             onCheck={handleCheck}\r\n             mainToggleOn={mainToggleOn}  // Passing the main toggle state\r\n           />\r\n        ))}\r\n      </div>\r\n      <CartSidebar\r\n        isOpen={isCartOpen}\r\n        onClose={() => setIsCartOpen(false)}\r\n        cartItems={cartItems}\r\n        numberOfPlates={numberOfPlates}  // Number of plates from location state\r\n        onUpdateQuantity={updateQuantity}\r\n        onToggleUnit={toggleUnit}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,YAAY,EAAEC,CAAC,QAAQ,cAAc;AACnF,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAS,CAAC,kBACtCH,OAAA;EACEI,SAAS,EAAE,6DAA6DF,IAAI,GAAG,cAAc,GAAG,aAAa,EAAG;EAChHG,OAAO,EAAEF,QAAS;EAAAG,QAAA,eAElBN,OAAA;IACEI,SAAS,EAAE,8EAA8EF,IAAI,GAAG,eAAe,GAAG,eAAe;EAAG;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChI;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACJ,CACN;;AAED;AAAAC,EAAA,GAXMV,YAAY;AAYlB,MAAMW,QAAQ,GAAGA,CAAC;EAAEC,IAAI;EAAEC,OAAO;EAAEC,IAAI;EAAEC,YAAY;EAAEC,OAAO;EAAEC;AAAa,CAAC,KAAK;EACjF,MAAMC,mBAAmB,GAAGN,IAAI,CAACO,MAAM,KAAK,MAAM;EAClDC,OAAO,CAACC,GAAG,CAAC,OAAO,EAACT,IAAI,CAAC;EACzBQ,OAAO,CAACC,GAAG,CAACT,IAAI,CAAC,aAAa,CAAC,CAAC;EAEhC,oBACEb,OAAA;IAAKI,SAAS,EAAC,gEAAgE;IAAAE,QAAA,gBAC7EN,OAAA;MAAKI,SAAS,EAAC,6BAA6B;MAAAE,QAAA,gBAC1CN,OAAA;QAAKuB,GAAG,EAAEV,IAAI,CAACW,KAAM;QAACC,GAAG,EAAEZ,IAAI,CAAC,aAAa,CAAE;QAACT,SAAS,EAAC;MAAqC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClGV,OAAA;QAAKI,SAAS,EAAC,mCAAmC;QAAAE,QAAA,gBAChDN,OAAA;UAAII,SAAS,EAAC,6BAA6B;UAAAE,QAAA,EAAEO,IAAI,CAAC,aAAa;QAAC;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAEtEV,OAAA;UACE0B,IAAI,EAAC,UAAU;UACfZ,OAAO,EAAEA,OAAQ;UACjBa,QAAQ,EAAEV,OAAQ;UAClBb,SAAS,EAAC;QAAM;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNV,OAAA;MAAKI,SAAS,EAAE,qBAAqBc,YAAY,GAAG,aAAa,GAAG,eAAe,EAAG;MAAAZ,QAAA,gBAEpFN,OAAA;QAAKI,SAAS,EAAC,4BAA4B;QAAAE,QAAA,EACxCS;MAAI;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,EACLS,mBAAmB,iBAClBnB,OAAA;QAAKI,SAAS,EAAC,mBAAmB;QAAAE,QAAA,eAChCN,OAAA,CAACC,YAAY;UACXC,IAAI,EAAEa,IAAI,KAAKF,IAAI,CAAC,OAAO,CAAE;UAC7BV,QAAQ,EAAEa;QAAa;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;;AAED;AAAAkB,GAAA,GAtCMhB,QAAQ;AAuCd,MAAMiB,YAAY,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,KAAK;EAAEC,YAAY;EAAEC,KAAK;EAAEjB,YAAY;EAAEC,OAAO;EAAEC;AAAa,CAAC,KAAK;EAAAgB,EAAA;EACtG,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAG/C,QAAQ,CAAC,KAAK,CAAC;EAC3C,oBACEW,OAAA;IAAKI,SAAS,EAAC,iCAAiC;IAAAE,QAAA,gBAC9CN,OAAA;MACEI,SAAS,EAAC,wDAAwD;MAClEC,OAAO,EAAEA,CAAA,KAAM+B,SAAS,CAAC,CAACD,MAAM,CAAE;MAAA7B,QAAA,gBAElCN,OAAA;QAAMI,SAAS,EAAC,qCAAqC;QAAAE,QAAA,EAAEwB;MAAQ;QAAAvB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,EACtEyB,MAAM,gBAAGnC,OAAA,CAACT,SAAS;QAAC8C,IAAI,EAAE;MAAG;QAAA9B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAAGV,OAAA,CAACV,WAAW;QAAC+C,IAAI,EAAE;MAAG;QAAA9B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC,EACRyB,MAAM,iBACLnC,OAAA;MAAAM,QAAA,EACGyB,KAAK,CAACO,GAAG,CAACzB,IAAI,iBACbb,OAAA,CAACY,QAAQ;QAEPC,IAAI,EAAEA,IAAK;QACXC,OAAO,EAAEkB,YAAY,CAACnB,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,KAAM;QAClDE,IAAI,EAAEkB,KAAK,CAACpB,IAAI,CAAC,WAAW,CAAC,CAAC,IAAIA,IAAI,CAAC,OAAO,CAAE;QAChDG,YAAY,EAAEA,CAAA,KAAMA,YAAY,CAACH,IAAI,CAAC,WAAW,CAAC,CAAE;QACpDI,OAAO,EAAEA,CAAA,KAAMA,OAAO,CAACJ,IAAI,CAAC,WAAW,CAAC,CAAE;QAC1CK,YAAY,EAAEA;MAAa,GANtBL,IAAI,CAAC,WAAW,CAAC;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOvB,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;;AAGD;AAAAwB,EAAA,CA/BML,YAAY;AAAAU,GAAA,GAAZV,YAAY;AAgClB,MAAMW,WAAW,GAAGA,CAAC;EAAEL,MAAM;EAAEM,OAAO;EAAEC,SAAS;EAAEC,cAAc;EAAEC,gBAAgB;EAAE5B;AAAa,CAAC,KAAK;EAAA6B,GAAA;EACtG;EACA,MAAMC,uBAAuB,GAAG,CAAC,iBAAiB,EAAE,gBAAgB,CAAC;EACrE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAG3D,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAAC4D,KAAK,EAAEC,QAAQ,CAAC,GAAG7D,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC8D,WAAW,EAAEC,cAAc,CAAC,GAAG/D,QAAQ,CAAC,EAAE,CAAC;;EAElD;EACF;EACA,MAAMgE,iBAAiB,GAAGA,CAACC,MAAM,EAAEC,KAAK,KAAK;IAC3C;IACA,MAAMC,WAAW,GAAGD,KAAK,KAAK,EAAE,GAAG,EAAE,GAAGE,MAAM,CAACF,KAAK,CAAC;IACrDX,gBAAgB,CAACU,MAAM,EAAEE,WAAW,CAAC,CAAC,CAAC;EACzC,CAAC;;EAED;EACA,MAAME,UAAU,GAAGA,CAACJ,MAAM,EAAEK,QAAQ,EAAEC,gBAAgB,KAAK;IACzD;IACA,MAAMJ,WAAW,GAAGG,QAAQ,GAAGC,gBAAgB,GAAGA,gBAAgB,GAAGD,QAAQ;IAC7Ef,gBAAgB,CAACU,MAAM,EAAEE,WAAW,CAAC,CAAC,CAAC;EACzC,CAAC;;EAGC;EACA,SAASK,sBAAsBA,CAAChD,IAAI,EAAE8B,cAAc,EAAEmB,YAAY,EAAEC,YAAY,EAAE;IAChF,IAAIC,aAAa,GAAG,CAAC;IAErB,IAAIF,YAAY,KAAKjD,IAAI,CAAC,OAAO,CAAC,EAAE;MAClC,MAAMoD,YAAY,GAAGpD,IAAI,CAAC,cAAc,CAAC;MACzCQ,OAAO,CAACC,GAAG,CAAC,IAAI,EAAE2C,YAAY,CAAC;MAC/BD,aAAa,GAAGrB,cAAc,GAAGsB,YAAY,GAAGpD,IAAI,CAAC8C,QAAQ;MAC7D;IACJ;IACA,IAAI9C,IAAI,CAAC,gBAAgB,CAAC,KAAK,IAAI,IAAIA,IAAI,CAAC,gBAAgB,CAAC,KAAK,IAAI,EAAE;MACtEmD,aAAa,GAAGD,YAAY,GAAGlD,IAAI,CAAC,cAAc,CAAC;MACnDQ,OAAO,CAACC,GAAG,CAAC,IAAI,EAAC0C,aAAa,CAAC;IACjC,CAAC,MAEM,IAAIF,YAAY,KAAKjD,IAAI,CAAC,QAAQ,CAAC,EAAE;MACxC,MAAMqD,kBAAkB,GAAGrD,IAAI,CAAC,gBAAgB,CAAC,GAAGA,IAAI,CAAC,oBAAoB,CAAC;MAC9EmD,aAAa,GAAGE,kBAAkB,GAAGH,YAAY,GAAGpB,cAAc;IAEpE,CAAC,MAAO,IAAImB,YAAY,KAAKjD,IAAI,CAAC,OAAO,CAAC,EAAE;MAC1C,MAAMoD,YAAY,GAAGpD,IAAI,CAAC,cAAc,CAAC;MACzCQ,OAAO,CAACC,GAAG,CAAC,IAAI,EAAE2C,YAAY,CAAC;MAC/BD,aAAa,GAAGrB,cAAc,GAAGsB,YAAY,GAAGpD,IAAI,CAAC8C,QAAQ;MAC7DtC,OAAO,CAACC,GAAG,CAAC,MAAM,EAAE0C,aAAa,CAAC;IACtC;IAEE,OAAOA,aAAa,CAACG,OAAO,CAAC,CAAC,CAAC;EACjC;;EAEA;EACA,MAAMC,WAAW,GAAG1B,SAAS,CAAC2B,MAAM,CAAC,CAACC,GAAG,EAAEzD,IAAI,KAAK;IAClD,MAAMiD,YAAY,GAAGjD,IAAI,CAACE,IAAI,CAAC,CAAC;IAChC,MAAMiD,aAAa,GAAGH,sBAAsB,CAAChD,IAAI,EAAE8B,cAAc,EAAEmB,YAAY,EAAEjD,IAAI,CAAC8C,QAAQ,CAAC;IAC/F,OAAOW,GAAG,GAAGC,UAAU,CAACP,aAAa,CAAC;EACxC,CAAC,EAAE,CAAC,CAAC,CAACG,OAAO,CAAC,CAAC,CAAC;;EAEhB;EACA,MAAMK,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB1B,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,EAAE,CAAC;IACZ7B,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;IAKzB,IAAI;MACF,MAAMqD,QAAQ,GAAG,MAAM7E,KAAK,CAAC8E,IAAI,CAAC,2BAA2B,EAAE;QAC7DC,MAAM,EAAET;MACV,CAAC,CAAC;MAEF,IAAIO,QAAQ,CAACG,IAAI,IAAIH,QAAQ,CAACG,IAAI,CAAC3B,WAAW,EAAE;QAC9CC,cAAc,CAACuB,QAAQ,CAACG,IAAI,CAAC3B,WAAW,CAAC;QACzC4B,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGN,QAAQ,CAACG,IAAI,CAAC3B,WAAW;MAClD,CAAC,MAAM;QACLD,QAAQ,CAAC,6BAA6B,CAAC;MACzC;IACF,CAAC,CAAC,OAAOgC,GAAG,EAAE;MACZhC,QAAQ,CAAC,yBAAyBgC,GAAG,CAACP,QAAQ,CAACG,IAAI,CAACK,OAAO,IAAI,sCAAsC,oDAAoD,CAAC;IAC5J,CAAC,SAAS;MACRnC,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAGD,oBACEhD,OAAA;IAAKI,SAAS,EAAE,8GAA8G+B,MAAM,GAAG,eAAe,GAAG,kBAAkB,EAAG;IAAA7B,QAAA,eAC5KN,OAAA;MAAKI,SAAS,EAAC,0BAA0B;MAAAE,QAAA,gBACvCN,OAAA;QAAKI,SAAS,EAAC,wCAAwC;QAAAE,QAAA,gBACrDN,OAAA;UAAII,SAAS,EAAC,iCAAiC;UAAAE,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzDV,OAAA;UAAQK,OAAO,EAAEoC,OAAQ;UAACrC,SAAS,EAAC,mCAAmC;UAAAE,QAAA,eACrEN,OAAA,CAACL,CAAC;YAAC0C,IAAI,EAAE;UAAG;YAAA9B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAENV,OAAA;QAAKI,SAAS,EAAC,2BAA2B;QAAAE,QAAA,EACvCoC,SAAS,CAAC0C,MAAM,KAAK,CAAC,gBACrBpF,OAAA;UAAKI,SAAS,EAAC,+DAA+D;UAAAE,QAAA,EAAC;QAE/E;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,GAENgC,SAAS,CAACJ,GAAG,CAACzB,IAAI,IAAI;UACpB,MAAM+C,gBAAgB,GAAG/C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC;UACtD,MAAMwE,mBAAmB,GAAGxE,IAAI,CAACE,IAAI,KAAKF,IAAI,CAAC,OAAO,CAAC,GACpDA,IAAI,CAAC,cAAc,CAAC,GACnBA,IAAI,CAACE,IAAI,KAAKF,IAAI,CAAC,QAAQ,CAAC,GAC7BA,IAAI,CAAC,cAAc,CAAC,GAAGA,IAAI,CAAC,kBAAkB,CAAC,GAC/CA,IAAI,CAAC,cAAc,CAAE;UACxB,MAAMmD,aAAa,GAAGH,sBAAsB,CAAChD,IAAI,EAAE8B,cAAc,EAAE9B,IAAI,CAACE,IAAI,EAAEF,IAAI,CAAC8C,QAAQ,CAAC;UAC5F,MAAM2B,KAAK,GAAGzE,IAAI,CAAC,OAAO,CAAC,KAAK,KAAK;UACrC,MAAM0E,QAAQ,GAAG1E,IAAI,CAAC,gBAAgB,CAAC,KAAK,IAAI,IAAIA,IAAI,CAAC,gBAAgB,CAAC,KAAK,IAAI;UACnF,MAAM2E,aAAa,GAAG3E,IAAI,CAAC,SAAS,CAAC,KAAK,KAAK,IAAIA,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI;UAE3EQ,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEkE,aAAa,CAAC;UAE5C,oBACExF,OAAA;YAA6BI,SAAS,EAAC,kDAAkD;YAAAE,QAAA,gBACvFN,OAAA;cAAKI,SAAS,EAAC,iCAAiC;cAAAE,QAAA,gBAC9CN,OAAA;gBAAII,SAAS,EAAC,kCAAkC;gBAAAE,QAAA,EAAEO,IAAI,CAAC,aAAa;cAAC;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC3EV,OAAA;gBAAKuB,GAAG,EAAEV,IAAI,CAACW,KAAM;gBAACC,GAAG,EAAEZ,IAAI,CAAC,aAAa,CAAE;gBAACT,SAAS,EAAC;cAAqC;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eAClGV,OAAA;gBAAGI,SAAS,EAAC,uDAAuD;gBAAAE,QAAA,gBAClEN,OAAA;kBAAMI,SAAS,EAAC,2BAA2B;kBAAAE,QAAA,EAAC;gBAAU;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eAC7DV,OAAA;kBAAMI,SAAS,EAAC,oBAAoB;kBAAAE,QAAA,GACjCgF,KAAK,GACH,IAAIzE,IAAI,CAAC8C,QAAQ,KAAK9C,IAAI,CAAC,cAAc,CAAC,MAAM8B,cAAc,KAAK,GACrE4C,QAAQ,GACL,GAAGF,mBAAmB,MAAMxE,IAAI,CAAC8C,QAAQ,KAAK,GAC9C6B,aAAa,GACX,GAAGH,mBAAmB,MAAMxE,IAAI,CAAC8C,QAAQ,MAAMhB,cAAc,KAAK,GAClE,GAAG0C,mBAAmB,MAAMxE,IAAI,CAAC8C,QAAQ,KAAK,eAEpD3D,OAAA;oBAAMI,SAAS,EAAC,6BAA6B;oBAAAE,QAAA,GAAC,GAAC,EAAC0D,aAAa;kBAAA;oBAAAzD,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAO,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACjE,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CAAC,EAEL,CAACoC,uBAAuB,CAAC2C,QAAQ,CAAC5E,IAAI,CAAC6E,aAAa,CAAC,IAAI7E,IAAI,CAACO,MAAM,KAAK,MAAM,iBAC9EpB,OAAA;cAAKI,SAAS,EAAC,wBAAwB;cAAAE,QAAA,gBACrCN,OAAA,CAACC,YAAY;gBACXC,IAAI,EAAEW,IAAI,CAACE,IAAI,KAAKF,IAAI,CAAC,OAAO,CAAE;gBAClCV,QAAQ,EAAEA,CAAA,KAAMa,YAAY,CAACH,IAAI,CAAC,WAAW,CAAC;cAAE;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACjD,CAAC,eACFV,OAAA;gBAAMI,SAAS,EAAC,uBAAuB;gBAAAE,QAAA,EAAEO,IAAI,CAACE;cAAI;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvD,CACN,eAEnBV,OAAA;cAAKI,SAAS,EAAC,uCAAuC;cAAAE,QAAA,gBACpDN,OAAA;gBACEK,OAAO,EAAEA,CAAA,KAAMuC,gBAAgB,CAAC/B,IAAI,CAAC,WAAW,CAAC,EAAE8E,IAAI,CAACC,GAAG,CAAC/E,IAAI,CAAC8C,QAAQ,GAAG,CAAC,EAAE,CAAC,CAAC,CAAE;gBACnFvD,SAAS,EAAC,uCAAuC;gBAAAE,QAAA,eAEjDN,OAAA,CAACP,KAAK;kBAAC4C,IAAI,EAAE;gBAAG;kBAAA9B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACb,CAAC,eAETV,OAAA;gBACE0B,IAAI,EAAC,QAAQ;gBACb6B,KAAK,EAAE1C,IAAI,CAAC8C,QAAS;gBACrBhC,QAAQ,EAAG8C,CAAC,IAAKpB,iBAAiB,CAACxC,IAAI,CAAC,WAAW,CAAC,EAAE4D,CAAC,CAACoB,MAAM,CAACtC,KAAK,EAAEK,gBAAgB,CAAE;gBACxFkC,MAAM,EAAEA,CAAA,KAAMpC,UAAU,CAAC7C,IAAI,CAAC,WAAW,CAAC,EAAEA,IAAI,CAAC8C,QAAQ,EAAEC,gBAAgB,CAAE;gBAC7ExD,SAAS,EAAC,mCAAmC;gBAC7C2F,GAAG,EAAC;cAAG;gBAAAxF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACR,CAAC,eAEFV,OAAA;gBACEK,OAAO,EAAEA,CAAA,KAAMuC,gBAAgB,CAAC/B,IAAI,CAAC,WAAW,CAAC,EAAEA,IAAI,CAAC8C,QAAQ,GAAG,CAAC,CAAE;gBACtEvD,SAAS,EAAC,uCAAuC;gBAAAE,QAAA,eAEjDN,OAAA,CAACR,IAAI;kBAAC6C,IAAI,EAAE;gBAAG;kBAAA9B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACZ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC;UAAA,GArDoBG,IAAI,CAAC,WAAW,CAAC;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAuDtB,CAAC;QAEV,CAAC;MACF;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,EAELgC,SAAS,CAAC0C,MAAM,GAAG,CAAC,iBACnBpF,OAAA;QAAKI,SAAS,EAAC,mCAAmC;QAAAE,QAAA,gBAChDN,OAAA;UAAKI,SAAS,EAAC,2CAA2C;UAAAE,QAAA,GAAC,iBAC1C,EAAC8D,WAAW;QAAA;UAAA7D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC,eAEPV,OAAA;UAAQK,OAAO,EAAEmE,YAAa;UAACpE,SAAS,EAAC,8DAA8D;UAAAE,QAAA,EAAC;QAEvG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEN,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;;AAMD;AAAAmC,GAAA,CAzMML,WAAW;AAAAwD,GAAA,GAAXxD,WAAW;AA0MjB,MAAMyD,IAAI,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAAA,IAAAC,eAAA;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGhH,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC2C,YAAY,EAAEsE,eAAe,CAAC,GAAGjH,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpD,MAAM,CAACkH,UAAU,EAAEC,aAAa,CAAC,GAAGnH,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChD,MAAM,CAAC4C,KAAK,EAAEwE,QAAQ,CAAC,GAAGpH,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtC,MAAM,CAACqH,UAAU,EAAEC,aAAa,CAAC,GAAGtH,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAAC6B,YAAY,EAAE0F,eAAe,CAAC,GAAGvH,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACzD,MAAM2F,QAAQ,GAAGpF,WAAW,CAAC,CAAC;EAC9B,MAAK,CAACiH,MAAM,EAACC,SAAS,CAAC,GAACzH,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC,MAAMsD,cAAc,GAAG,EAAAwD,eAAA,GAAAnB,QAAQ,CAAC+B,KAAK,cAAAZ,eAAA,uBAAdA,eAAA,CAAgBxD,cAAc,KAAI,CAAC,CAAC,CAAC;EAC5D;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEAvD,SAAS,CAAC,MAAM;IACd,MAAM4H,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMrC,QAAQ,GAAG,MAAMsC,KAAK,CAAC,oCAAoC,CAAC;QAClE5F,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEqD,QAAQ,CAAC;QAE5B,IAAI,CAACA,QAAQ,CAACuC,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBxC,QAAQ,CAACyC,MAAM,EAAE,CAAC;QAC3D;QAEA,MAAMtC,IAAI,GAAG,MAAMH,QAAQ,CAAC0C,IAAI,CAAC,CAAC;QAClC;;QAGA;;QAEAhG,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEwD,IAAI,CAAC;;QAEzB;QACA,MAAMwC,eAAe,GAAGxC,IAAI,CAACT,MAAM,CAAC,CAACkD,GAAG,EAAE1G,IAAI,KAAK;UACjD,MAAMiB,QAAQ,GAAGjB,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;UACxC,IAAI,CAAC0G,GAAG,CAACzF,QAAQ,CAAC,EAAE;YAClByF,GAAG,CAACzF,QAAQ,CAAC,GAAG;cAAEA,QAAQ;cAAEC,KAAK,EAAE;YAAG,CAAC;UACzC;UACAwF,GAAG,CAACzF,QAAQ,CAAC,CAACC,KAAK,CAACyF,IAAI,CAAC3G,IAAI,CAAC;UAC9BQ,OAAO,CAACC,GAAG,CAAC,KAAK,EAACiG,GAAG,CAAC;UACtB,OAAOA,GAAG;QACZ,CAAC,EAAE,CAAC,CAAC,CAAC;QAENlB,WAAW,CAACoB,MAAM,CAACC,MAAM,CAACJ,eAAe,CAAC,CAAC,CAAC,CAAC;;QAE7C;;QAEA,MAAMK,YAAY,GAAG,CAAC,CAAC;QACvB7C,IAAI,CAAC8C,OAAO,CAAC/G,IAAI,IAAI;UACnB8G,YAAY,CAAC9G,IAAI,CAAC,WAAW,CAAC,CAAC,GAAGA,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;QACnD,CAAC,CAAC;QACF4F,QAAQ,CAACkB,YAAY,CAAC,CAAC,CAAC;MAC1B,CAAC,CAAC,OAAO1E,KAAK,EAAE;QACd5B,OAAO,CAAC4B,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAED+D,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;;EAGN;EACA5H,SAAS,CAAC,MAAM;IACdqH,QAAQ,CAACoB,SAAS,IAAI;MACpB,MAAMC,YAAY,GAAG,CAAC,CAAC;MACvB1B,QAAQ,CAAC2B,OAAO,CAACjG,QAAQ,IAAIA,QAAQ,CAACC,KAAK,CAAC,CAAC6F,OAAO,CAAC/G,IAAI,IAAI;QAC3D,IAAIA,IAAI,CAACO,MAAM,KAAK,MAAM,EAAE;UAC1B0G,YAAY,CAACjH,IAAI,CAAC,WAAW,CAAC,CAAC,GAAGK,YAAY,GAAIL,IAAI,CAAC,OAAO,CAAC,GAACA,IAAI,CAAC,QAAQ,CAAC;QAChF;MACF,CAAC,CAAC;MACF,OAAOiH,YAAY;IACrB,CAAC,CAAC;EACJ,CAAC,EAAE,CAAC5G,YAAY,EAAEkF,QAAQ,CAAC,CAAC;EAE5B,MAAM4B,cAAc,GAAGA,CAAC1E,MAAM,EAAEE,WAAW,KAAK;IAC9CgD,aAAa,CAACyB,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE,CAAC3E,MAAM,GAAGE;IAAY,CAAC,CAAC,CAAC;EAC7D,CAAC;EAED,MAAM0E,UAAU,GAAI5E,MAAM,IAAK;IAC7B,MAAMzC,IAAI,GAAGuF,QAAQ,CAClB2B,OAAO,CAACjG,QAAQ,IAAIA,QAAQ,CAACC,KAAK,CAAC,CACnCoG,IAAI,CAACtH,IAAI,IAAIA,IAAI,CAAC,WAAW,CAAC,KAAKyC,MAAM,CAAC;IAE7C,IAAIzC,IAAI,IAAIA,IAAI,CAACO,MAAM,KAAK,MAAM,EAAE;MAClCqF,QAAQ,CAACwB,IAAI,KAAK;QAChB,GAAGA,IAAI;QACP,CAAC3E,MAAM,GAAG2E,IAAI,CAAC3E,MAAM,CAAC,KAAKzC,IAAI,CAAC,OAAO,CAAC,GAAGA,IAAI,CAAC,QAAQ,CAAC,GAAGA,IAAI,CAAC,OAAO;MAC1E,CAAC,CAAC,CAAC;IACL;EACF,CAAC;EAED,MAAMuH,WAAW,GAAI9E,MAAM,IAAK;IAC9B,MAAM+E,eAAe,GAAG;MAAE,GAAGrG,YAAY;MAAE,CAACsB,MAAM,GAAG,CAACtB,YAAY,CAACsB,MAAM;IAAE,CAAC;IAC5EgD,eAAe,CAAC+B,eAAe,CAAC;IAChC,IAAI,CAACrG,YAAY,CAACsB,MAAM,CAAC,EAAE;MACzBkD,aAAa,CAACyB,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAE,CAAC3E,MAAM,GAAG;MAAE,CAAC,CAAC,CAAC;IACnD,CAAC,MAAM;MACLkD,aAAa,CAACyB,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAE,CAAC3E,MAAM,GAAG;MAAE,CAAC,CAAC,CAAC;IACnD;EACF,CAAC;EAGD,MAAMgF,aAAa,GAAGb,MAAM,CAACC,MAAM,CAACnB,UAAU,CAAC,CAAClC,MAAM,CAAC,CAACC,GAAG,EAAEiE,CAAC,KAAKjE,GAAG,GAAGiE,CAAC,EAAE,CAAC,CAAC;EAE9E,MAAM7F,SAAS,GAAG0D,QAAQ,CAAC2B,OAAO,CAACjG,QAAQ,IACzCA,QAAQ,CAACC,KAAK,CACXyG,MAAM,CAAC3H,IAAI,IAAI0F,UAAU,CAAC1F,IAAI,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,CACjDyB,GAAG,CAACzB,IAAI,KAAK;IACZ,GAAGA,IAAI;IACP8C,QAAQ,EAAE4C,UAAU,CAAC1F,IAAI,CAAC,WAAW,CAAC,CAAC;IACvCE,IAAI,EAAEkB,KAAK,CAACpB,IAAI,CAAC,WAAW,CAAC,CAAC,IAAIA,IAAI,CAAC,OAAO,CAAC;IAC/C4H,KAAK,EAAExG,KAAK,CAACpB,IAAI,CAAC,WAAW,CAAC,CAAC,KAAKA,IAAI,CAAC,OAAO,CAAC,GACvCA,IAAI,CAAC,cAAc,CAAC,GACpBA,IAAI,CAAC,gBAAgB,CAAC;IAChCiB,QAAQ,EAAEA,QAAQ,CAACA;EACrB,CAAC,CAAC,CACN,CAAC;EAED,oBACE9B,OAAA;IAAKI,SAAS,EAAC,iCAAiC;IAAAE,QAAA,gBAC9CN,OAAA;MAAKI,SAAS,EAAC,8CAA8C;MAAAE,QAAA,gBAC3DN,OAAA;QAAKI,SAAS,EAAC,0FAA0F;QAAAE,QAAA,gBACvGN,OAAA;UAAII,SAAS,EAAC,+BAA+B;UAAAE,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvDV,OAAA;UACEK,OAAO,EAAEA,CAAA,KAAMsG,aAAa,CAAC,IAAI,CAAE;UACnCvG,SAAS,EAAC,8CAA8C;UAAAE,QAAA,gBAExDN,OAAA,CAACN,YAAY;YAAC2C,IAAI,EAAE;UAAG;YAAA9B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,EACzB4H,aAAa,GAAG,CAAC,iBAChBtI,OAAA;YAAMI,SAAS,EAAC,wEAAwE;YAAAE,QAAA,EACrFgI;UAAa;YAAA/H,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CACP;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAENV,OAAA;QAAKI,SAAS,EAAC,0BAA0B;QAAAE,QAAA,eACvCN,OAAA,CAACC,YAAY;UACXC,IAAI,EAAEgB,YAAa;UACnBf,QAAQ,EAAEA,CAAA,KAAMyG,eAAe,CAACqB,IAAI,IAAI,CAACA,IAAI;QAAE;UAAA1H,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNV,OAAA;MAAKI,SAAS,EAAC,KAAK;MAAAE,QAAA,EACjB8F,QAAQ,CAAC9D,GAAG,CAACR,QAAQ,iBACjB9B,OAAA,CAAC6B,YAAY;QAEbC,QAAQ,EAAEA,QAAQ,CAACA,QAAS;QAC5BC,KAAK,EAAED,QAAQ,CAACC,KAAM;QACtBC,YAAY,EAAEA,YAAa;QAC3BC,KAAK,EAAEA,KAAM;QACbjB,YAAY,EAAEkH,UAAW;QACzBjH,OAAO,EAAEmH,WAAY;QACrBlH,YAAY,EAAEA,YAAa,CAAE;MAAA,GAPxBY,QAAQ,CAACA,QAAQ;QAAAvB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQvB,CACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNV,OAAA,CAACwC,WAAW;MACVL,MAAM,EAAEuE,UAAW;MACnBjE,OAAO,EAAEA,CAAA,KAAMkE,aAAa,CAAC,KAAK,CAAE;MACpCjE,SAAS,EAAEA,SAAU;MACrBC,cAAc,EAAEA,cAAe,CAAE;MAAA;MACjCC,gBAAgB,EAAEoF,cAAe;MACjChH,YAAY,EAAEkH;IAAW;MAAA3H,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACwF,GAAA,CA/NID,IAAI;EAAA,QAOSrG,WAAW;AAAA;AAAA8I,GAAA,GAPxBzC,IAAI;AAiOV,eAAeA,IAAI;AAAC,IAAAtF,EAAA,EAAAiB,GAAA,EAAAW,GAAA,EAAAyD,GAAA,EAAA0C,GAAA;AAAAC,YAAA,CAAAhI,EAAA;AAAAgI,YAAA,CAAA/G,GAAA;AAAA+G,YAAA,CAAApG,GAAA;AAAAoG,YAAA,CAAA3C,GAAA;AAAA2C,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}